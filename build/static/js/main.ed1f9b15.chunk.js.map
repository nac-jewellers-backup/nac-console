{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Manageusers.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","TaxSettingList","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","MASTERVENDORS","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","VOUCHERMASTER","queries_templateObject3","queries_templateObject4","SHIPPINGMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","applyfilter","readOnly","masterproducttype","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","address","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","product_name","product_category","Switch","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","_React$useContext2","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","pathname","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","containergrid","columnobjs","onupdate","components_EnhancedTableHead_EnhancedTableHead","col","orderid","paymentstatusobj","orderstatus","Editvendor","paymentmode","paymentstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","cartAddressesByCartId","addressobj","addressline1","join","userProfileByUserprofileId","usercontent","firstName","mobile","giftwrapsByCartId","gift","getmaster","_getmaster","opts","res","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","username","OrderList_components_Results_Results","showcolumns","OrderList","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","esm_Input_Input","heading","updatedAt","handleSave","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","weightstart","weightend","getgemlist","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","drawer","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","masterlist","setMasterlist","onCreate","Array","prototype","insert","button_title","columnname","controllabel","mastervaluekey","defaultkey","onPermissionadd","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","Taxsettings","allTaxsettings","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","country","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","prod_id","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pages","pagecontent","displayname","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","selectedvendors","setSelectedvendors","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","prices","vendorobj","pricejson","goldprice_val","purityname","vendorids","allindexval","Manageusers","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","optionname","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","selected","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","settingData","shapeData","colSpan","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discount","discountDesc","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","esbody","endpoint","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed1f9b15.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n    masterstyles: '/masterstyles',\n    masterthemes: '/masterthemes',\n    masteroccassions: '/masteroccassions',\n    masterpaymentstatus : '/paymentstatus',\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    masterorderstatus : '/orderstatus',\n    shippingzones : '/zones',\n    shipmentsettings : '/shipmensettings',\n    shippingattributes : '/shippingattributes',\n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n    addshippingattributes : '/addshippingattributes',\n    userconfiguration : '/userconfiguration',\n    masterroles : '/masterroles',\n    manageadminusers : '/manageadminusers',\n    goldpriceupdate : '/goldpriceupdate',\n\nmanageusers : '/manageusers',\n\n    masterpages : '/masterpages',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority',\n    taxsettings: '/taxsettings',\n    masterattributes: '/masterattributes',\n\n    masterstones: '/masterstones',\n    masterstonecolors: '/masterstonecolors',\n    masterstoneshapes: '/masterstoneshapes',\n    weights: '/weights',\n\n    \n    category: '/categories',\n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList_1 = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;/*********** configuration query */\n\nconst TaxList =`\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList =`\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL =`\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS =`\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES =`\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER =`\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER =`\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER =`\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER =`\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER =`\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER =`\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER =`\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS =`\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES =`\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES =`\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES =`\nquery  {\n  allMasterProductCategories(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERPAGES =`\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst MASTERVENDORS =`\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING =`\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\n\n\nconst MASTERSTONES =`\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES =`\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES= `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`\nconst ACTIVESHIPPINGZONES =`\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES =`\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS =`\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS =`\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES =`\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERATTRIBUTES =`\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS =`\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES =`\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES =`\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER =`\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES =`\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n      voucherCodes\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst CREATETAXSETUP = gql`\nmutation MyMutation($id:UUID!,$updatedAt:Date!,$createdAt:Date!,$taxValue:Double!,$taxName:String!,$hsnNumber:String!) {\n  __typename\n  createMasterTaxSetting(input: {masterTaxSetting: {id: $id, updatedAt: $updatedAt, createdAt: $createdAt, taxValue: $taxValue, taxName: $taxName, hsnNumber: $hsnNumber}}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT,\n    MASTERMATERIAL,\n    MASTERMATERIALCOLORS,\n    MASTERPRODUCTPURITIES,\n    COLLECTIONMASTER,\n    DESIGNMASTER,\n    DIAMONDMASTER,\n    DIAMONDSETTINGS,\n    DIAMONDSHAPES,\n    MASTERPRODUCTTYPES,\n    MASTERGEMSETTINGS,\n    MASTERGEMSHAPES ,\n    MASTERGEMTYPES,\n    MASTERGENDER ,\n    SEOPRIORITIES,\n    CREATETAXSETUP,\n    TaxSettingList,\n    MASTERCATEGORIES,\n    EARRINGBACKING,\n    MASTERATTRIBUTES,\n    MASTERSTONESHAPES,\n    MASTERSTONECOLORS,\n    MASTERSTONES,\n    MASTERWEIGHTS,\n    THEMEMASTER,\n    STYLEMASTER,\n    OCCASSIONSMASTER,\n    PAYMENTSTATUSMASTER,\n    SHIPPINGZONES,\n    MASTERCOUNTRIES,\n    SHIPPINGCHARGES,\n    ACTIVESHIPPINGZONES,\n    MASTERPAGES,\n    MASTERVENDORS\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.stylori.com\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\nexport const URL = \"https://console-staging.stylori.com\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"\n\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n \n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n    props.applyfilter(searchtext, value.name, producttype)\n\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n  props.applyfilter(searchtext, category, value.name  )\n\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}  >\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3} >\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {/* <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\"> */}\n                                    {row.product_name}\n\n                                    {/* </Link>  */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Products\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"contained\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs() {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={URL+\"/configuration\"}\n        label=\"Configure\"\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.shortCode} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label ? headCell.label : headCell.name}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].id : 'Order ID');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' ?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button onClick={(e) => Editvendor(order)} ><EditIcon />\n                     </Button>\n                         } \n                   </TableCell> :\n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email.match(searchtext+'.*') || \n      element.mobile.match(searchtext+'.*') ||\n      element.orderid.match(searchtext+'.*') || \n      element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n   \n    orderCtx.orderMaster.orders.forEach(element => {\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    if(element.cartAddressesByCartId)\n                    {\n                        let addresscontent = element.cartAddressesByCartId.nodes;\n                        addresscontent.forEach(addressobj => {\n                            orderobj['address'] = addressobj.addressline1\n                        })\n\n                    }\n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n                orderobj['mobile'] = usercontent.mobile ? usercontent.mobile : \"\"\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxSettingList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxSettingList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allTaxsettings.nodes)\n        setFiltervalue(fatchvalue.data.allTaxsettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercategories = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercategories;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n        \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            \n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n        })\n       \n      \n      setIsloaded(true)\n        setMasters({\n          product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n          product_types : fatchvalue.data.allMasterProductTypes.nodes,\n          materials :  fatchvalue.data.allMasterMaterials.nodes,\n          purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n          diamondtypes : diamondtypes,\n          collections : fatchvalue.data.allMasterCollections.nodes,\n          occations : fatchvalue.data.allMasterOccasions.nodes,\n          styles : fatchvalue.data.allMasterStyles.nodes,\n          themes : fatchvalue.data.allMasterThemes.nodes,\n          shiprates : fatchvalue.data.allShippingCharges.nodes\n        })\n\n      })\n      .catch(console.error)\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n    //getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport data from \"./data.json\"\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Userconfiguration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            User and Roles Management\n          </Typography>\n    </Grid>\n    \n    {data.options.map((menu, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={menu.url}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {menu.title}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERVENDORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState('')\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      prices : purityprices,\n      vendors : selectedvendors\n    }\n   \n\n    let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n    alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERVENDORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   setDefaultpurity(value)\n  }\n  const handleInputChange = type => event => {\n    setGoldprice(event.target.value);\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n\n    setPurityprices({...purityprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    // alert(JSON.stringify(goldprice))\n    // alert(JSON.stringify(defaultpurity))\n     let default_purity = parseInt()\n     let pricejson = {}\n    data.purity.forEach(element => {\n      let priceratio = element.values / defaultpurity.values;\n      let goldprice_val = priceratio*goldprice\n      pricejson[element.values] = goldprice_val\n    })\n    setPurityprices(pricejson)\n    setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice}\n                             onChange={handleInputChange(\"goldprice\")}\n                            label=\"Gold Price\"\n                          />\n               <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.purity}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"choose purity\"} variant=\"outlined\" />}\n                /> \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button>\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {data.purity.map((purityname, index) =>(\n            <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.values]}\n                      onChange={handlePriceChange(purityname.values)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))}\n          </> : null}\n           \n         </Grid>\n      </CardContent>\n      </Card>\n\n\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getwebusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"}  onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    if(type === 'Pricing')\n    {\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\n\n    }else{\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\n\n    }\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link>\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let esbody = {\n      \"product_id\": prod_id\n    }\n    var endpoint = '/reindex'\n    if(event.target.checked)\n    {\n      endpoint = '/esearch_forceindex'\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    let esresponse =  await sendNetworkRequest(endpoint, {}, esbody)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        let gender_arr = []\n        if(genders)\n        {\n        genders = genders.split(',')\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n      }\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport {\n    Dashboard, Login, Productupload, Configuration,Manageusers,\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\n} from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport { NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return (\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute path={route.productupload} component={Productupload} />\n                    <PrivateRoute path={route.configuration} component={Configuration} />\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute path={route.productlist} component={Productlist} />\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n                    <PrivateRoute path={route.category} component={Mastercategories} />\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n                    <PrivateRoute path={route.weights} component={Masterweights} />\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\n\n                    \n                    \n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n\n\n\n\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\n                    <PrivateRoute path={route.seo} component={Seopriority} />\n\n\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n\n                </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}