{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js';\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\"\n    }\n  }\n}));\nexport function Component(props) {\n  const _useContext = useContext(ProductContext),\n        productCtx = _useContext.productCtx,\n        setProductCtx = _useContext.setProductCtx; // alert(productCtx.productname)\n\n\n  const classes = useStyle();\n\n  const keyPress = type => e => {\n    console.log('product', productCtx, e);\n    const re = /^[a-zA-Z\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx(_objectSpread({}, productCtx, {\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  function createVariant() {\n    props.history.push('create_variant');\n  }\n\n  useEffect(() => {\n    let prod_id = localStorage.getItem('productEditId');\n    const url = \"https://api-alpha.stylori.net/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: {\n          \"productId\": \"WyJwcm9kdWN0X2xpc3RzIiwiU1AwMTMzIl0=\"\n        }\n      })\n    }; // console.log(\"helo\",setProductCtx)\n\n    fetch(url, opts).then(res => res.json()).then(fatchvalue => {\n      setProductCtx(_objectSpread({}, productCtx, {\n        productname: fatchvalue.data.productList.productName,\n        product_type: fatchvalue.data.productList.productType,\n        product_categoy: fatchvalue.data.productList.productCategory,\n        gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n        diamondlist: fatchvalue.data.productList.productDiamondsByProductSku.nodes,\n        variants: fatchvalue.data.productList.transSkuListsByProductId.nodes,\n        product_images: fatchvalue.data.productList.productImagesByProductId.nodes\n      }));\n    }).catch(console.error);\n  }, []);\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 9,\n    spacing: 2,\n    style: {\n      padding: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.productname,\n    id: \"productname\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    name: \"productname\",\n    label: \"Product Name\",\n    onChange: keyPress('productname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(DiamondDetails, {\n    diamond: productCtx.diamondlist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(GemstoneDetails, {\n    gemstone: productCtx.gemstonelist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => createVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })))), React.createElement(Variants, {\n    variants: productCtx.variants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    spacing: 2,\n    style: {\n      padding: \"15px\",\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    InputProps: {\n      readOnly: true\n    },\n    id: \"short_description\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"short_description\",\n    label: \"Short Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"seo_text\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"seo_text\",\n    label: \"SEO Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"url\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"url\",\n    label: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.product_categoy,\n    id: \"product_category\",\n    InputProps: {\n      readOnly: true\n    },\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_categoy,\n    name: \"product_category\",\n    label: \"Product Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.product_type,\n    id: \"product_type\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_type,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"product_type\",\n    label: \"Product Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n}\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  }\n}));\nexport const ProductAttributes = withRouter(props => {\n  const classes = useStyles2();\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, \"error\");\n\n  const _content = React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  })), React.createElement(CreateVariant, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })));\n\n  return _content;\n});\nexport default withRouter(ProductAttributes);","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js"],"names":["React","useEffect","useContext","makeStyles","Grid","TextField","Button","Fab","Input","ProductContext","ProductProvider","withRouter","DiamondDetails","GemstoneDetails","Variants","productCategory","useQuery","CircularProgress","AddIcon","PRODUCTEDIT","CreateVariant","useStyle","theme","helperinput","color","Component","props","productCtx","setProductCtx","classes","keyPress","type","e","console","log","re","target","value","test","createVariant","history","push","prod_id","localStorage","getItem","url","opts","method","headers","body","JSON","stringify","query","variables","fetch","then","res","json","fatchvalue","productname","data","productList","productName","product_type","productType","product_categoy","gemstonelist","productGemstonesByProductSku","nodes","diamondlist","productDiamondsByProductSku","variants","transSkuListsByProductId","product_images","productImagesByProductId","catch","error","padding","error_message","display","justifyContent","backgroundColor","readOnly","useStyles2","progress","margin","ProductAttributes","loading","_content","mapper","mappertype"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport CreateVariant from './CreateVariant'\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  }\n}))\n\nexport function Component(props) {\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  // alert(productCtx.productname)\n  const classes = useStyle();\n  const keyPress = type => e => {\n\n    console.log('product', productCtx, e)\n    const re = /^[a-zA-Z\\b]+$/;\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value })\n    }\n\n  }\n  function createVariant() {\n    props.history.push('create_variant')\n  }\n  useEffect(() => {\n    let prod_id = localStorage.getItem('productEditId');\n    const url = \"https://api-alpha.stylori.net/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": \"WyJwcm9kdWN0X2xpc3RzIiwiU1AwMTMzIl0=\" } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productList.productName,\n          product_type: fatchvalue.data.productList.productType,\n          product_categoy: fatchvalue.data.productList.productCategory,\n          gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productList.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productList.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productList.productImagesByProductId.nodes\n        })\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    <Grid container spacing={1} >\n      <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding: \"15px\" }}>\n        <Grid container item md={6}>\n          <TextField\n            className={classes.helperinput}\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            value={productCtx.productname}\n            id=\"productname\"\n            error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n            name=\"productname\"\n            label=\"Product Name\"\n            onChange={keyPress('productname')}\n          />\n        </Grid>\n        <DiamondDetails diamond={productCtx.diamondlist} />\n        <GemstoneDetails gemstone={productCtx.gemstonelist} />\n        <div style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        }}><Button onClick={(e) => createVariant()}>\n            <Fab color=\"primary\" aria-label=\"add\">\n              <AddIcon />\n            </Fab>\n          </Button></div>\n        <Variants variants={productCtx.variants} />\n      </Grid>\n      <Grid item xs={12} sm={12} md={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={productCtx.productname}\n          InputProps={{\n            readOnly: true,\n          }}\n          id=\"short_description\"\n          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n          InputProps={{\n            readOnly: true,\n          }}\n          name=\"short_description\"\n          label=\"Short Description\"\n\n        />\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={productCtx.productname}\n          id=\"seo_text\"\n          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n          InputProps={{\n            readOnly: true,\n          }}\n          name=\"seo_text\"\n          label=\"SEO Text\"\n\n        />\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          defaultValue={productCtx.productname}\n          id=\"url\"\n          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n          InputProps={{\n            readOnly: true,\n          }}\n          name=\"url\"\n          label=\"URL\"\n\n        />\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          value={productCtx.product_categoy}\n          id=\"product_category\"\n          InputProps={{\n            readOnly: true,\n          }}\n          error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n          name=\"product_category\"\n          label=\"Product Category\"\n\n        />\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          value={productCtx.product_type}\n          id=\"product_type\"\n          error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n          InputProps={{\n            readOnly: true,\n          }}\n          name=\"product_type\"\n          label=\"Product Type\"\n\n        />\n\n      </Grid>\n    </Grid>\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n    <CreateVariant {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);"]},"metadata":{},"sourceType":"module"}