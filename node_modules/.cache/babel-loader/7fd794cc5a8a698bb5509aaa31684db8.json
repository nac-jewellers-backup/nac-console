{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/components/Label/Label.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const className = props.className,\n        variant = props.variant,\n        color = props.color,\n        shape = props.shape,\n        children = props.children,\n        style = props.style,\n        rest = _objectWithoutProperties(props, [\"className\", \"variant\", \"color\", \"shape\", \"children\", \"style\"]);\n\n  const classes = useStyles();\n  const rootClassName = clsx({\n    [classes.root]: true,\n    [classes.rounded]: shape === 'rounded'\n  }, className);\n\n  const finalStyle = _objectSpread({}, style);\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = \"1px solid \".concat(color);\n    finalStyle.color = color;\n  }\n\n  return React.createElement(Typography, Object.assign({}, rest, {\n    className: rootClassName,\n    style: finalStyle,\n    variant: \"overline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), children);\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\nexport default Label;","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/components/Label/Label.js"],"names":["React","PropTypes","clsx","makeStyles","Typography","colors","useStyles","theme","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","height","minWidth","whiteSpace","padding","spacing","rounded","Label","props","className","variant","color","children","style","rest","classes","rootClassName","finalStyle","backgroundColor","border","propTypes","node","string","oneOf","object","defaultProps","grey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n"]},"metadata":{},"sourceType":"module"}