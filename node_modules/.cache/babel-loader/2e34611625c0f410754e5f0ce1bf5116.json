{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/Productupload/Step8.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css';\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers'; // create Plotly React component via dependency injection\n\nconst Plot = createPlotlyComponent(window.Plotly); // create Plotly renderers via dependency injection\n\nconst PlotlyRenderers = createPlotlyRenderers(Plot); // see documentation for supported input formats\n\nconst data = [{\n  'id': '1',\n  'productid': 'SE30002',\n  'productname': 'Gold Ring',\n  'purity': '18K',\n  'material': 'Gold',\n  'diamondcolor': 'EF',\n  'diamondclarity': 'VVS',\n  'gemstone': 'Navrathna',\n  'size': '18',\n  'costprice': 30000,\n  'sellingprice': 38000,\n  'margin': 8000\n}, {\n  'id': '2',\n  'productid': 'SE30002',\n  'productname': 'Diamond Ring',\n  'purity': '18K',\n  'material': 'Diamond',\n  'diamondcolor': 'EF',\n  'diamondclarity': 'VVS',\n  'gemstone': 'Navrathna',\n  'size': '12',\n  'costprice': 70000,\n  'sellingprice': 98000,\n  'margin': 28000\n}];\nconst dimensions = [{\n  value: 'firstName',\n  title: 'First Name'\n}];\n\nconst reduce = function (row, memo) {\n  memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount);\n  return memo;\n};\n\nconst calculations = [{\n  title: 'Amount',\n  value: 'amountTotal',\n  template: function (val, row) {\n    return '$' + val.toFixed(2);\n  },\n  sortBy: function (row) {\n    return isNaN(row.amountTotal) ? 0 : row.amountTotal;\n  }\n}];\nexport default function Pivot(props) {\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx,\n        masterData = _React$useContext.masterData;\n\n  function setcurrentstate(s) {\n    setProductCtx(_objectSpread({}, productCtx, {\n      s\n    }));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(PivotTableUI, Object.assign({\n    data: data,\n    onChange: s => setcurrentstate(s),\n    renderers: Object.assign({}, TableRenderers, PlotlyRenderers)\n  }, productCtx.s, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })))));\n}","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/Productupload/Step8.js"],"names":["React","Grid","ReactDOM","PivotTableUI","Typography","ProductContext","TableRenderers","createPlotlyComponent","createPlotlyRenderers","Plot","window","Plotly","PlotlyRenderers","data","dimensions","value","title","reduce","row","memo","amountTotal","parseFloat","transaction","amount","calculations","template","val","toFixed","sortBy","isNaN","Pivot","props","useContext","productCtx","setProductCtx","masterData","setcurrentstate","s","Object","assign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}