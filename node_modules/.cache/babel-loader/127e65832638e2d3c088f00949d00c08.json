{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/Productupload/Step4.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Grid from '@material-ui/core/Grid';\nimport { Input } from '../../components/Input.js';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Card, CardHeader, Divider, CardContent } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0\n    }\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1)\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1)\n  },\n  iconSmall: {\n    fontSize: 20\n  }\n}));\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx,\n        masterData = _React$useContext.masterData;\n\n  const handleInputChange = type => e => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      [type]: e.target.value\n    }));\n  };\n\n  const handleChange = type => selectedOption => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      [type]: selectedOption\n    }));\n  };\n\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      metal_color: selectedOption\n    }));\n  };\n\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      diamond_colour: selectedOption\n    }));\n  };\n\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      diamond_clarity: selectedOption\n    }));\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      metal_purity: selectedOption\n    }));\n  };\n\n  function handleClick(e) {\n    var metalsarr = productCtx.metals;\n    metalsarr.push(\"test\");\n    setProductCtx(_objectSpread({}, productCtx, {\n      metals: metalsarr\n    }));\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: \"Default SKU For Display\\n\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardcontent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    alignItems: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    className: classes.fixedTag,\n    defaultValue: productCtx.default_metal_colour,\n    onChange: handleChange('default_metal_colour'),\n    options: productCtx.metalcolour,\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Metal Colour\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.default_metal_purity,\n    onChange: handleChange('default_metal_purity'),\n    options: productCtx.metalpurity,\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Metal Purity\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), ['BA', 'R', 'BR'].includes(productCtx.product_type_shortcode) ? React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    isDisabled: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.default_metal_size,\n    onChange: handleChange('default_metal_size'),\n    options: productCtx.selected_sizes,\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Default Size\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })) : null), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/Productupload/Step4.js"],"names":["React","clsx","makeStyles","useTheme","Typography","TextField","InputAdornment","Grid","Input","FormControl","FormLabel","MenuItem","Select","Chip","OutlinedInput","ProductContext","Button","Icon","InputLabel","Multiselect","Table","TableBody","TableCell","TableHead","TableRow","SelectPlaceholder","Autocomplete","Card","CardHeader","Divider","CardContent","useStyles","theme","root","marginTop","spacing","fixedTag","padding","button","margin","leftIcon","marginRight","rightIcon","marginLeft","iconSmall","fontSize","createData","name","calories","fat","carbs","protein","rows","Review","props","classes","className","rest","inputLabel","useRef","useContext","productCtx","setProductCtx","masterData","handleInputChange","type","e","target","value","handleChange","selectedOption","handlemetalcolorChange","metal_color","handlediamndcolorChange","diamond_colour","handlediamndclarityChange","diamond_clarity","handlemetalpurityChange","metal_purity","handleClick","metalsarr","metals","push","cardcontent","default_metal_colour","metalcolour","getTagProps","map","option","index","params","InputProps","default_metal_purity","metalpurity","includes","product_type_shortcode","default_metal_size","selected_sizes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}