{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js';\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\"\n    }\n  }\n}));\nexport function Component(props) {\n  const _useContext = useContext(ProductContext),\n        productCtx = _useContext.productCtx,\n        setProductCtx = _useContext.setProductCtx; // alert(productCtx.productname)\n\n\n  const classes = useStyle();\n\n  const keyPress = type => e => {\n    console.log('product', productCtx, e);\n    const re = /^[a-zA-Z\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx(_objectSpread({}, productCtx, {\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  function createVariant() {}\n\n  useEffect(() => {\n    const url = \"https://api-alpha.stylori.net/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: {\n          \"productId\": \"WyJwcm9kdWN0X2xpc3RzIiwiU0IwMDEwIl0=\"\n        }\n      })\n    }; // console.log(\"helo\",setProductCtx)\n\n    fetch(url, opts).then(res => res.json()).then(fatchvalue => {\n      setProductCtx(_objectSpread({}, productCtx, {\n        productname: fatchvalue.data.productList.productName,\n        product_type: fatchvalue.data.productList.productType,\n        product_categoy: fatchvalue.data.productList.productCategory,\n        gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n        diamondlist: fatchvalue.data.productList.productDiamondsByProductSku.nodes,\n        variants: fatchvalue.data.productList.transSkuListsByProductId.nodes,\n        product_images: fatchvalue.data.productList.productImagesByProductId.nodes\n      }));\n    }).catch(console.error);\n  }, []);\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 9,\n    spacing: 2,\n    style: {\n      padding: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.productname,\n    id: \"productname\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    name: \"productname\",\n    label: \"Product Name\",\n    onChange: keyPress('productname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(DiamondDetails, {\n    diamond: productCtx.diamondlist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(GemstoneDetails, {\n    gemstone: productCtx.gemstonelist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: e => createVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })))), React.createElement(Variants, {\n    variants: productCtx.variants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    spacing: 2,\n    style: {\n      padding: \"15px\",\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    InputProps: {\n      readOnly: true\n    },\n    id: \"short_description\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"short_description\",\n    label: \"Short Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"seo_text\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"seo_text\",\n    label: \"SEO Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"url\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"url\",\n    label: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.product_categoy,\n    id: \"product_category\",\n    InputProps: {\n      readOnly: true\n    },\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_categoy,\n    name: \"product_category\",\n    label: \"Product Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.product_type,\n    id: \"product_type\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_type,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"product_type\",\n    label: \"Product Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })));\n}\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  }\n}));\nexport const ProductAttributes = withRouter(props => {\n  const classes = useStyles2();\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"error\");\n\n  const _content = React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })));\n\n  return _content;\n});\nexport default withRouter(ProductAttributes);","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js"],"names":["React","useEffect","useContext","makeStyles","Grid","TextField","Button","Fab","Input","ProductContext","ProductProvider","withRouter","DiamondDetails","GemstoneDetails","Variants","productCategory","useQuery","CircularProgress","AddIcon","PRODUCTEDIT","useStyle","theme","helperinput","color","Component","props","productCtx","setProductCtx","classes","keyPress","type","e","console","log","re","target","value","test","createVariant","url","opts","method","headers","body","JSON","stringify","query","variables","fetch","then","res","json","fatchvalue","productname","data","productList","productName","product_type","productType","product_categoy","gemstonelist","productGemstonesByProductSku","nodes","diamondlist","productDiamondsByProductSku","variants","transSkuListsByProductId","product_images","productImagesByProductId","catch","error","padding","error_message","display","justifyContent","backgroundColor","readOnly","useStyles2","progress","margin","ProductAttributes","loading","_content","mapper","mappertype"],"mappings":"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","sourcesContent":["import React,{useEffect,useContext} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext,ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nconst useStyle = makeStyles(theme=>({\n    helperinput: {\n        '& .MuiFormHelperText-root':{\n          color: \"#e53935\",\n        }\n      }\n}))\n\nexport  function Component (props){\n  \n    const { productCtx, setProductCtx } = useContext(ProductContext);\n    // alert(productCtx.productname)\n    const classes  = useStyle();\n    const keyPress =type => e => {\n      \n        console.log('product',productCtx,e)\n        const re = /^[a-zA-Z\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n          setProductCtx({ ...productCtx, [type]: e.target.value})\n        }\n        \n     }\n     function createVariant(){\n       \n     }\n    useEffect(()=>{\n      const url = \"https://api-alpha.stylori.net/graphql\";\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query:PRODUCTEDIT,variables:{\"productId\":\"WyJwcm9kdWN0X2xpc3RzIiwiU0IwMDEwIl0=\"} })\n      };\n      // console.log(\"helo\",setProductCtx)\n        fetch(url, opts)\n        .then(res => res.json())\n        .then(fatchvalue=>{\n          setProductCtx({\n            ...productCtx,\n            productname: fatchvalue.data.productList.productName,\n            product_type:fatchvalue.data.productList.productType,\n            product_categoy: fatchvalue.data.productList.productCategory,\n            gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n            diamondlist:fatchvalue. data.productList.productDiamondsByProductSku.nodes,\n            variants:fatchvalue.data.productList.transSkuListsByProductId.nodes,\n            product_images:fatchvalue.data.productList.productImagesByProductId.nodes\n          })\n        })\n        .catch(console.error)\n     },[])\n    return(\n        <Grid container spacing={1} >\n            <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding:\"15px\"}}>\n              <Grid container item md={6}>\n                    <TextField  \n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.productname}\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                      />\n              </Grid>  \n              <DiamondDetails diamond={productCtx.diamondlist} /> \n              <GemstoneDetails gemstone={productCtx.gemstonelist}/>\n              <div style={{display: \"flex\",\n    justifyContent: \"flex-end\"}}><Button onClick={(e) => createVariant()}>\n              <Fab color=\"primary\" aria-label=\"add\">\n  <AddIcon />\n</Fab>\n                      </Button></div>\n              <Variants variants={productCtx.variants}/>\n            </Grid>\n            <Grid item  xs={12} sm={12} md={3} spacing={2} style={{ padding:\"15px\", backgroundColor: \"#FFFFFF\"}}>\n            <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          id=\"short_description\"\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"short_description\"\n                          label=\"Short Description\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"seo_text\"\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"seo_text\"\n                          label=\"SEO Text\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"url\"\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"url\"\n                          label=\"URL\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.product_categoy}\n                          id=\"product_category\"\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                          name=\"product_category\"\n                          label=\"Product Category\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.product_type}\n                          id=\"product_type\"\n                          error = {productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"product_type\"\n                          label=\"Product Type\"\n                       \n                        />\n                        \n            </Grid>\n        </Grid>\n    )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const ProductAttributes = withRouter(props => {\n \n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if(error) return <div>error</div>\n \n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n  <Component {...props}/>\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);"]},"metadata":{},"sourceType":"module"}