{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/Productupload/Step5.js\";\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Card, CardHeader, Divider, Chip, TextField, CardContent } from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0\n    }\n  }\n}));\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx;\n\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const handleChange = type => (event, value) => {\n    setProductCtx(_objectSpread({}, productCtx, {\n      [type]: value\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(CardHeader, {\n    title: \"Type of Fit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.cardcontent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    sm: 12,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.themes,\n    onChange: handleChange('themes'),\n    options: productCtx.masterData.themes.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Select Themes\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.prod_styles,\n    onChange: handleChange('prod_styles'),\n    options: productCtx.masterData.styles.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Style\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.occassions,\n    onChange: handleChange('occassions'),\n    options: productCtx.masterData.occasions.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Occasions\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.collections,\n    onChange: handleChange('collections'),\n    options: productCtx.masterData.collections.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Collections\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.stonecount,\n    onChange: handleChange('stonecount'),\n    options: productCtx.masterData.stones.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Collections\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    id: \"product_category\",\n    multiple: true,\n    className: classes.fixedTag,\n    defaultValue: productCtx.stonecolour,\n    onChange: handleChange('stonecolour'),\n    options: productCtx.masterData.gemstonecolor.map(option => option.label),\n    renderTags: (value, getTagProps) => value.map((option, index) => React.createElement(Chip, Object.assign({\n      variant: \"outlined\",\n      size: \"small\",\n      label: option\n    }, getTagProps({\n      index\n    }), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }))),\n    renderInput: params => React.createElement(TextField, Object.assign({}, params, {\n      label: \"Collections\",\n      margin: \"dense\",\n      variant: \"outlined\",\n      fullWidth: true,\n      InputProps: _objectSpread({}, params.InputProps, {\n        type: 'search'\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/Productupload/Step5.js"],"names":["React","Box","Grid","FormLabel","SelectPlaceholder","clsx","makeStyles","Autocomplete","Card","CardHeader","Divider","Chip","TextField","CardContent","ProductContext","useStyles","theme","root","marginTop","spacing","fixedTag","padding","Review","props","classes","useContext","productCtx","setProductCtx","className","rest","handleChange","type","event","value","cardcontent","themes","masterData","map","option","label","getTagProps","index","params","InputProps","prod_styles","styles","occassions","occasions","collections","stonecount","stones","stonecolour","gemstonecolor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}