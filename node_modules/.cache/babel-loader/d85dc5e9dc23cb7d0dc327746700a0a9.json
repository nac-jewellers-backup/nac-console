{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js';\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\"\n    }\n  }\n}));\nexport function Component(props) {\n  const _useContext = useContext(ProductContext),\n        productCtx = _useContext.productCtx,\n        setProductCtx = _useContext.setProductCtx;\n\n  const _useState = useState({\n    create_variant: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setstate = _useState2[1]; // alert(productCtx.productname)\n\n\n  const classes = useStyle();\n\n  const keyPress = type => e => {\n    console.log(e.target.value, 'keypress');\n    console.log('product', productCtx, e);\n    const re = /^[a-zA-Z\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx(_objectSpread({}, productCtx, {\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  function createVariant() {\n    let diamondColorSku = [];\n    let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_color => {\n      let diamond_data = {\n        id: diamond_color.id,\n        diamondColour: diamond_color.diamondColour\n      };\n      let status = diamondColorSku.some(store_dia => store_dia.diamondColour == diamond_color.diamondColour) ? '' : diamondColorSku.push(diamond_data);\n      return diamond_color;\n    });\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_clarity => {\n      let diamond_data = {\n        id: diamond_clarity.id,\n        diamondClarity: diamond_clarity.diamondClarity\n      };\n      let status = diamondClaritySku.some(store_dia => store_dia.diamondClarity == diamond_clarity.diamondClarity) ? '' : diamondClaritySku.push(diamond_data);\n      return diamond_clarity;\n    });\n    setProductCtx(_objectSpread({}, productCtx, {\n      productDiamondColor: diamondColorSku,\n      productDiamondClarity: diamondClaritySku\n    }));\n    setstate(_objectSpread({}, state, {\n      create_variant: true\n    })); // props.history.push('create_variant')\n  }\n\n  function saveProductEditItem() {}\n\n  useEffect(() => {\n    let prod_id = localStorage.getItem('productEditId');\n    const url = \"https://api-staging.stylori.com/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: {\n          \"productId\": prod_id\n        }\n      })\n    }; // console.log(\"helo\",setProductCtx)\n\n    fetch(url, opts).then(res => res.json()).then(fatchvalue => {\n      setProductCtx(_objectSpread({}, productCtx, {\n        productname: fatchvalue.data.productListByProductId.productName,\n        product_type: fatchvalue.data.productListByProductId.productType,\n        product_categoy: fatchvalue.data.productListByProductId.productCategory,\n        gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n        diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n        variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n        product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n        productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n        productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n        variant_size: fatchvalue.data.productListByProductId.sizeVarient // productDiamondColor:diamondColorSku,\n        // productDiamondClarity:diamondClaritySku,\n\n      }));\n    }).catch(console.error);\n  }, []);\n  return state.create_variant ? React.createElement(CreateVariant, {\n    productMetalColor: productCtx.productMetalColor,\n    productMetalPurity: productCtx.productMetalPurity,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }) : React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 9,\n    spacing: 2,\n    style: {\n      padding: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.productname,\n    id: \"productname\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    name: \"productname\",\n    label: \"Product Name\",\n    onChange: keyPress('productname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    style: {\n      fontSize: \".9rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Diamond Table\"), React.createElement(DiamondDetails, {\n    diamond: productCtx.diamondlist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    style: {\n      fontSize: \".9rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Gemstone Table\"), React.createElement(GemstoneDetails, {\n    gemstone: productCtx.gemstonelist,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    style: {\n      fontSize: \".9rem\",\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Create Variant\"), React.createElement(Button, {\n    onClick: e => createVariant(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    style: {\n      height: \"20px\",\n      width: \" 37px\"\n    },\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    style: {\n      fontSize: \".9rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"Variant Table\"), React.createElement(Variants, {\n    variants: productCtx.variants,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    spacing: 2,\n    style: {\n      padding: \"15px\",\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    InputProps: {\n      readOnly: true\n    },\n    id: \"short_description\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"short_description\",\n    label: \"Short Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"seo_text\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"seo_text\",\n    label: \"SEO Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"url\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"url\",\n    label: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.product_categoy,\n    id: \"product_category\",\n    InputProps: {\n      readOnly: true\n    },\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_categoy,\n    name: \"product_category\",\n    label: \"Product Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    value: productCtx.product_type,\n    id: \"product_type\",\n    error: productCtx && productCtx.error_message && productCtx.error_message.product_type,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"product_type\",\n    label: \"Product Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    container: true,\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: e => saveProductEditItem(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"Save\"))));\n}\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  }\n}));\nexport const ProductAttributes = withRouter(props => {\n  const classes = useStyles2();\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, \"error\");\n\n  const _content = React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(Component, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  })));\n\n  return _content;\n});\nexport default withRouter(ProductAttributes);","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js"],"names":["React","useEffect","useContext","useState","makeStyles","Grid","TextField","Button","Fab","Input","ProductContext","ProductProvider","withRouter","DiamondDetails","GemstoneDetails","Variants","productCategory","useQuery","CircularProgress","AddIcon","PRODUCTEDIT","CreateVariant","API_URL","GRAPHQL_DEV_CLIENT","useStyle","theme","helperinput","color","Component","props","productCtx","setProductCtx","create_variant","state","setstate","classes","keyPress","type","e","console","log","target","value","re","test","createVariant","diamondColorSku","diamondClaritySku","diamondlist","map","diamond_color","diamond_data","id","diamondColour","status","some","store_dia","push","diamond_clarity","diamondClarity","productDiamondColor","productDiamondClarity","saveProductEditItem","prod_id","localStorage","getItem","url","opts","method","headers","body","JSON","stringify","query","variables","fetch","then","res","json","fatchvalue","productname","data","productListByProductId","productName","product_type","productType","product_categoy","gemstonelist","productGemstonesByProductSku","nodes","productDiamondsByProductSku","variants","transSkuListsByProductId","product_images","productImagesByProductId","productMetalColor","productMetalcoloursByProductId","productMetalPurity","productPuritiesByProductId","variant_size","sizeVarient","catch","error","padding","error_message","fontSize","display","justifyContent","alignItems","height","width","backgroundColor","readOnly","useStyles2","progress","margin","ProductAttributes","loading","_content","mapper","mappertype"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext,useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL,GRAPHQL_DEV_CLIENT } from '../../config';\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  }\n}))\n\nexport function Component(props) {\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state,setstate] = useState({\n    create_variant:false\n  })\n  // alert(productCtx.productname)\n  const classes = useStyle();\n  const keyPress = type => e => {\n    console.log(e.target.value,'keypress')\n    console.log('product', productCtx, e)\n    const re = /^[a-zA-Z\\b]+$/;\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value })\n    }\n\n  }\n  function createVariant() {\n    let diamondColorSku = [];\n    let diamondClaritySku = [];\n    productCtx.diamondlist&&productCtx.diamondlist.map(diamond_color=>{\n      let diamond_data ={\n        id:diamond_color.id,\n        diamondColour:diamond_color.diamondColour\n      }\n     let status = diamondColorSku.some(store_dia=>store_dia.diamondColour==diamond_color.diamondColour) ?'': diamondColorSku.push(diamond_data) ;\n      return diamond_color;\n    })\n    productCtx.diamondlist&&productCtx.diamondlist.map(diamond_clarity=>{\n      let diamond_data ={\n        id:diamond_clarity.id,\n        diamondClarity:diamond_clarity.diamondClarity\n      }\n      let status = diamondClaritySku.some(store_dia=>store_dia.diamondClarity==diamond_clarity.diamondClarity) ? '': diamondClaritySku.push(diamond_data);\n      return diamond_clarity;\n    })\n    setProductCtx({\n      ...productCtx,\n      productDiamondColor:diamondColorSku,\n        productDiamondClarity:diamondClaritySku,\n    })\n    setstate({...state,create_variant:true})\n    // props.history.push('create_variant')\n  }\n  function saveProductEditItem(){\n\n  }\n  useEffect(() => {\n    let prod_id = localStorage.getItem('productEditId');\n    const url = \"https://api-staging.stylori.com/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: fatchvalue.data.productListByProductId.sizeVarient\n          // productDiamondColor:diamondColorSku,\n          // productDiamondClarity:diamondClaritySku,\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity}/>:<Grid container spacing={1} >\n    <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding: \"15px\" }}>\n      <Grid container item md={6}>\n        <TextField\n          className={classes.helperinput}\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          value={productCtx.productname}\n          id=\"productname\"\n          error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n          name=\"productname\"\n          label=\"Product Name\"\n          onChange={keyPress('productname')}\n        />\n      </Grid>\n      <Grid style={{fontSize:\".9rem\"}}>Diamond Table</Grid>\n      <DiamondDetails diamond={productCtx.diamondlist} />\n      <Grid style={{fontSize:\".9rem\"}}>Gemstone Table</Grid>\n      <GemstoneDetails gemstone={productCtx.gemstonelist} />\n      <Grid style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      }}>\n        <Grid style={{fontSize:\".9rem\",display:\"flex\",alignItems:\"center\"}}>Create Variant</Grid>\n        <Button  onClick={(e) => createVariant()}>\n          <Fab style={{height: \"20px\",width:\" 37px\"}} color=\"primary\" aria-label=\"add\">\n            <AddIcon />\n          </Fab>\n        </Button></Grid>\n        <Grid style={{fontSize:\".9rem\"}}>Variant Table</Grid>\n      <Variants variants={productCtx.variants} />\n    </Grid>\n    <Grid item xs={12} sm={12} md={3} spacing={2} style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}>\n      <TextField\n        className={classes.helperinput}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        defaultValue={productCtx.productname}\n        InputProps={{\n          readOnly: true,\n        }}\n        id=\"short_description\"\n        error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n        InputProps={{\n          readOnly: true,\n        }}\n        name=\"short_description\"\n        label=\"Short Description\"\n\n      />\n      <TextField\n        className={classes.helperinput}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        defaultValue={productCtx.productname}\n        id=\"seo_text\"\n        error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n        InputProps={{\n          readOnly: true,\n        }}\n        name=\"seo_text\"\n        label=\"SEO Text\"\n\n      />\n      <TextField\n        className={classes.helperinput}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        defaultValue={productCtx.productname}\n        id=\"url\"\n        error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n        InputProps={{\n          readOnly: true,\n        }}\n        name=\"url\"\n        label=\"URL\"\n      />\n      <TextField\n        className={classes.helperinput}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        value={productCtx.product_categoy}\n        id=\"product_category\"\n        InputProps={{\n          readOnly: true,\n        }}\n        error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n        name=\"product_category\"\n        label=\"Product Category\"\n\n      />\n      <TextField\n        className={classes.helperinput}\n        variant=\"outlined\"\n        margin=\"dense\"\n        fullWidth\n        value={productCtx.product_type}\n        id=\"product_type\"\n        error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n        InputProps={{\n          readOnly: true,\n        }}\n        name=\"product_type\"\n        label=\"Product Type\"\n\n      />\n\n    </Grid>\n    <Grid container style={{\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      }}>\n    <Grid item >\n        <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n          Save\n        </Button></Grid>\n    </Grid>\n  </Grid>\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);"]},"metadata":{},"sourceType":"module"}