{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/CreateVariant.js\";\nimport React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nexport function CreateVariant(props) {\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx;\n\n  const _useState = useState({\n    metal_color: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        variant = _useState2[0],\n        setVariant = _useState2[1];\n\n  console.log(productCtx, 'createvariants');\n\n  function handleChange(status_data) {\n    let color = variant.metal_color;\n    color.push(status_data);\n    setVariant(_objectSpread({}, variant, {\n      metal_color: color\n    }));\n  }\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Metal Color\"), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, productCtx.masterData && productCtx.masterData.metalcolour.map((data, index) => productCtx.productMetalColor && productCtx.productMetalColor.some(prod_metal_color => prod_metal_color.productColor === data.name) ? React.createElement(FormControlLabel, {\n    disabled: true,\n    control: React.createElement(Checkbox, {\n      checked: true,\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }),\n    label: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: variant.metal_color && variant.metal_color.some(met_colr => met_colr.id == data.id) ? true : false,\n      onChange: () => handleChange(data),\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }),\n    label: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))))));\n} // export const ProductAttributes = withRouter(props => {\n//     const { productCtx, setProductCtx } = React.useContext(ProductContext);\n//     const _content = <ProductProvider value={productCtx,setProductCtx}  >\n//       <CreateVariant {...props} />\n//     </ProductProvider>\n//     return _content\n//   });\n\nexport default CreateVariant;","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/CreateVariant.js"],"names":["React","useState","Grid","FormGroup","FormControlLabel","Checkbox","withRouter","ProductContext","ProductProvider","CreateVariant","props","useContext","productCtx","setProductCtx","metal_color","variant","setVariant","console","log","handleChange","status_data","color","push","masterData","metalcolour","map","data","index","productMetalColor","some","prod_metal_color","productColor","name","met_colr","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,gBAA1B,EAA4CC,QAA5C,QAA4D,mBAA5D;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,cAAT,EAAwBC,eAAxB,QAA+C,eAA/C;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,4BAEKV,KAAK,CAACW,UAAN,CAAiBJ,cAAjB,CAFL;AAAA,QAEzBK,UAFyB,qBAEzBA,UAFyB;AAAA,QAEbC,aAFa,qBAEbA,aAFa;;AAAA,oBAGJZ,QAAQ,CAAC;AAClCa,IAAAA,WAAW,EAAC;AADsB,GAAD,CAHJ;AAAA;AAAA,QAG1BC,OAH0B;AAAA,QAGlBC,UAHkB;;AAMjCC,EAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ,EAAuB,gBAAvB;;AACA,WAASO,YAAT,CAAsBC,WAAtB,EAAmC;AAC/B,QAAIC,KAAK,GAAGN,OAAO,CAACD,WAApB;AACAO,IAAAA,KAAK,CAACC,IAAN,CAAWF,WAAX;AACAJ,IAAAA,UAAU,mBACHD,OADG;AAEND,MAAAA,WAAW,EAACO;AAFN,OAAV;AAIH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQT,UAAU,CAACW,UAAX,IAAuBX,UAAU,CAACW,UAAX,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsC,CAACC,IAAD,EAAMC,KAAN,KAEzDf,UAAU,CAACgB,iBAAX,IAA8BhB,UAAU,CAACgB,iBAAX,CAA6BC,IAA7B,CAAmCC,gBAAD,IAAoBA,gBAAgB,CAACC,YAAjB,KAAgCL,IAAI,CAACM,IAA3F,CAA9B,GACK,oBAAC,gBAAD;AACD,IAAA,QAAQ,MADP;AAED,IAAA,OAAO,EACH,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,IAAnB;AAAyB,MAAA,KAAK,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH;AAKD,IAAA,KAAK,EAAEN,IAAI,CAACM,IALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,GAQA,oBAAC,gBAAD;AACA,IAAA,OAAO,EACH,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAEjB,OAAO,CAACD,WAAR,IAAqBC,OAAO,CAACD,WAAR,CAAoBe,IAApB,CAAyBI,QAAQ,IAAEA,QAAQ,CAACC,EAAT,IAAaR,IAAI,CAACQ,EAArD,CAArB,GAA8E,IAA9E,GAAmF,KAAtG;AAA6G,MAAA,QAAQ,EAAE,MAAIf,YAAY,CAACO,IAAD,CAAvI;AAA+I,MAAA,KAAK,EAAC,UAArJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAIA,IAAA,KAAK,EAAEA,IAAI,CAACM,IAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVmB,CAF/B,CAFJ,CADJ,CADJ,CADJ;AAgCH,C,CACD;AAEA;AAEA;AACA;AACA;AACA;AAEA;;AACA,eAAevB,aAAf","sourcesContent":["import React,{useState} from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext,ProductProvider } from '../../context';\nexport function CreateVariant(props) {\n\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [variant,setVariant] = useState({\n        metal_color:[]\n    })\n    console.log(productCtx,'createvariants')\n    function handleChange(status_data) {\n        let color = variant.metal_color;\n        color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color:color\n        })\n    }\n    return (\n        <Grid container>\n            <Grid item>\n                <Grid container>\n                    <Grid>Metal Color</Grid>\n                    <FormGroup row>\n                        {\n                            productCtx.masterData&&productCtx.masterData.metalcolour.map((data,index)=>(\n                                \n                                productCtx.productMetalColor&&productCtx.productMetalColor.some((prod_metal_color)=>prod_metal_color.productColor===data.name) ?     \n                                     <FormControlLabel\n                                    disabled\n                                    control={\n                                        <Checkbox checked={true} value=\"checkedA\" />\n                                    }\n                                    label={data.name}\n                                />:     \n                                <FormControlLabel\n                                control={\n                                    <Checkbox checked={variant.metal_color&&variant.metal_color.some(met_colr=>met_colr.id==data.id)?true:false} onChange={()=>handleChange(data)} value=\"checkedA\" />\n                                }\n                                label={data.name}\n                            />\n                           \n                            ))\n                        }\n                    </FormGroup>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n\n}\n// export const ProductAttributes = withRouter(props => {\n\n//     const { productCtx, setProductCtx } = React.useContext(ProductContext);\n   \n//     const _content = <ProductProvider value={productCtx,setProductCtx}  >\n//       <CreateVariant {...props} />\n//     </ProductProvider>\n//     return _content\n\n//   });\nexport default CreateVariant;"]},"metadata":{},"sourceType":"module"}