{"ast":null,"code":"import _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/context/GlobalContext.js\";\nimport React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\nconst globalCtxInitial = {\n  globalCtx: {\n    auth: {\n      loggedIn: false,\n      userData: {}\n    },\n    sideBarOpen: false,\n    isExpand: false,\n    selectedIndex: 0,\n    gqlClient: GRAPHQL_DEV_CLIENT\n  },\n  setGlobalCtx: () => null\n};\nexport const GlobalContext = React.createContext(globalCtxInitial);\nexport const GlobalConsumer = GlobalContext.Consumer;\nexport const GlobalProvider = props => {\n  const _React$useState = React.useState(globalCtxInitial.globalCtx),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        globalCtx = _React$useState2[0],\n        setGlobalCtx = _React$useState2[1]; // on Mount get Data from storage\n  // on Unmount store data to storage\n\n\n  return React.createElement(GlobalContext.Provider, {\n    value: {\n      globalCtx,\n      setGlobalCtx\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/context/GlobalContext.js"],"names":["React","GRAPHQL_DEV_CLIENT","globalCtxInitial","globalCtx","auth","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","createContext","GlobalConsumer","Consumer","GlobalProvider","props","useState","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,WAAnC;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAC;AACDC,MAAAA,QAAQ,EAAE,KADT;AAEDC,MAAAA,QAAQ,EAAE;AAFT,KADE;AAKPC,IAAAA,WAAW,EAAE,KALN;AAMPC,IAAAA,QAAQ,EAAE,KANH;AAOPC,IAAAA,aAAa,EAAE,CAPR;AAQPC,IAAAA,SAAS,EAAET;AARJ,GADU;AAWrBU,EAAAA,YAAY,EAAE,MAAM;AAXC,CAAzB;AAcA,OAAO,MAAMC,aAAa,GAAGZ,KAAK,CAACa,aAAN,CAAoBX,gBAApB,CAAtB;AAEP,OAAO,MAAMY,cAAc,GAAGF,aAAa,CAACG,QAArC;AAEP,OAAO,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA,0BACEjB,KAAK,CAACkB,QAAN,CAAehB,gBAAgB,CAACC,SAAhC,CADF;AAAA;AAAA,QAC3BA,SAD2B;AAAA,QAChBQ,YADgB,wBAEnC;AACA;;;AACA,SACI,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAAER,MAAAA,SAAF;AAAaQ,MAAAA;AAAb,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,KAAK,CAACE,QADX,CADJ;AAKH,CATM","sourcesContent":["import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}"]},"metadata":{},"sourceType":"module"}