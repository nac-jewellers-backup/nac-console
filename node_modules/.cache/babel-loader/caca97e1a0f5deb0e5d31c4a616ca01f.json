{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/Login/components/LoginForm/LoginForm.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { Card, CardContent, CardMedia, Typography, Divider, Link, Avatar } from '@material-ui/core';\nconst schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    }\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {},\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const className = props.className,\n        rest = _objectWithoutProperties(props, [\"className\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formState = _useState2[0],\n        setFormState = _useState2[1];\n\n  useEffect(() => {// const errors = validate(formState.values, schema);\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n    setFormState(formState => _objectSpread({}, formState, {\n      values: _objectSpread({}, formState.values, {\n        [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }),\n      touched: _objectSpread({}, formState.touched, {\n        [event.target.name]: true\n      })\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // dispatch(login());\n  };\n\n  const hasError = field => formState.touched[field] && formState.errors[field] ? true : false;\n\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Sign in on the internal platform\"), React.createElement(\"form\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    error: hasError('email'),\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    label: \"Email address\",\n    name: \"email\",\n    onChange: handleChange,\n    value: formState.values.email || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: hasError('password'),\n    fullWidth: true,\n    helperText: hasError('password') ? formState.errors.password[0] : null,\n    label: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: formState.values.password || '',\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: classes.submitButton,\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Sign in\"))), React.createElement(CardMedia, {\n    className: classes.media,\n    title: \"Cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.person,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: \"/images/shape1.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }))));\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\nexport default LoginForm;","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/Login/components/LoginForm/LoginForm.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Button","TextField","gradients","LockIcon","Card","CardContent","CardMedia","Typography","Divider","Link","Avatar","schema","email","presence","allowEmpty","message","password","useStyles","theme","root","card","width","breakpoints","values","md","maxWidth","overflow","display","position","flexGrow","flexBasis","content","padding","spacing","media","borderTopRightRadius","borderBottomRightRadius","color","palette","white","flexDirection","justifyContent","down","icon","backgroundImage","green","borderRadius","shape","top","left","height","fontSize","loginForm","divider","margin","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","LoginForm","props","className","rest","classes","isValid","touched","errors","formState","setFormState","handleChange","event","persist","target","name","type","checked","value","handleSubmit","preventDefault","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    width: theme.breakpoints.values.md,\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\n\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  \n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  useEffect(() => {\n    // const errors = validate(formState.values, schema);\n\n    // setFormState(formState => ({\n    //   ...formState,\n    //   isValid: errors ? false : true,\n    //   errors: errors || {}\n    // }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // dispatch(login());\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        Sign in on the internal platform\n        </Typography>\n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n        </form>\n       \n      </CardContent>\n      <CardMedia\n        className={classes.media}\n        title=\"Cover\"\n\n      >\n             <div className={classes.person}>\n                <img src=\"/images/shape1.png\"\n                 />\n              </div> \n        {/* <Typography\n          color=\"inherit\"\n          variant=\"subtitle1\"\n        >\n            Hella narvwhal Cosby sweater McSweeney's, salvia kitsch before they\n            sold out High Life.\n        </Typography>\n        <div className={classes.person}>\n        \n          <Avatar\n            alt=\"Person\"\n            className={classes.avatar}\n            src=\"/images/avatar_2.png\"\n            backgroundImage=\"/images/blob-shape.svg\"\n          />\n          <div>\n            <Typography\n              color=\"inherit\"\n              variant=\"body1\"\n            >\n                Ekaterina Tankova\n            </Typography>\n            <Typography\n              color=\"inherit\"\n              variant=\"body2\"\n            >\n                Manager at inVision\n            </Typography>\n          </div>\n        </div> */}\n      </CardMedia>\n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}