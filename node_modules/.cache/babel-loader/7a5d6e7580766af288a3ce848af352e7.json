{"ast":null,"code":"import _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/context/MaterialContext.js\";\nimport React from 'react';\nconst materialCtxInitial = {\n  materialCtx: {},\n  materialMaster: {\n    materials: []\n  },\n  setMaterialCtx: () => null\n};\nexport const MaterialContext = React.createContext(materialCtxInitial);\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n  console.log(\"resposeobjvalue1\" + JSON.stringify(apiData));\n  materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n  console.log(\"resposeobjvalue1\" + JSON.stringify(materialCtxInitial.materialCtx));\n  return materialCtxInitial.materialCtx;\n};\n\nexport const MaterialProvider = props => {\n  console.info('PROPS', props, props.value.mappertype);\n\n  const _React$useState = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        materialCtx = _React$useState2[0],\n        setmaterialCtx = _React$useState2[1]; // on Mount get Data from storage\n  // on Unmount store data to storage\n\n\n  React.useEffect(() => {\n    console.info('materialCtx s', materialCtx);\n  }, [materialCtx.material]);\n  return React.createElement(MaterialContext.Provider, {\n    value: {\n      materialCtx,\n      setmaterialCtx,\n      masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/context/MaterialContext.js"],"names":["React","materialCtxInitial","materialCtx","materialMaster","materials","setMaterialCtx","MaterialContext","createContext","MaterialConsumer","Consumer","mapDataToCtx","apiData","mapper","mappertype","Object","keys","length","console","log","JSON","stringify","MaterialProvider","props","info","value","useState","data","setmaterialCtx","useEffect","material","masterData","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE,EADU;AAIvBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,SAAS,EAAE;AADC,GAJO;AAOvBC,EAAAA,cAAc,EAAE,MAAM;AAPC,CAA3B;AAUA,OAAO,MAAMC,eAAe,GAAGN,KAAK,CAACO,aAAN,CAAoBN,kBAApB,CAAxB;AAEP,OAAO,MAAMO,gBAAgB,GAAGF,eAAe,CAACG,QAAzC;;AAEP,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,UAAlB,KAAiC;AAClD,MAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,KAAgC,CAAnC,EAAsC,OAAO,EAAP;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBC,IAAI,CAACC,SAAL,CAAeT,OAAf,CAA/B;AACAV,EAAAA,kBAAkB,CAACC,WAAnB,CAA+BW,UAA/B,IAA6CD,MAAM,CAACD,OAAD,CAAnD;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBC,IAAI,CAACC,SAAL,CAAenB,kBAAkB,CAACC,WAAlC,CAA/B;AAEA,SAAOD,kBAAkB,CAACC,WAA1B;AACH,CARD;;AAUA,OAAO,MAAMmB,gBAAgB,GAAGC,KAAK,IAAI;AACrCL,EAAAA,OAAO,CAACM,IAAR,CAAa,OAAb,EAAqBD,KAArB,EAA2BA,KAAK,CAACE,KAAN,CAAYX,UAAvC;;AADqC,0BAEIb,KAAK,CAACyB,QAAN,CAAef,YAAY,CAACY,KAAK,CAACE,KAAN,CAAYE,IAAb,EAAmBJ,KAAK,CAACE,KAAN,CAAYZ,MAA/B,EAAsCU,KAAK,CAACE,KAAN,CAAYX,UAAlD,CAA3B,CAFJ;AAAA;AAAA,QAE7BX,WAF6B;AAAA,QAEhByB,cAFgB,wBAGrC;AACA;;;AAEA3B,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AAClBX,IAAAA,OAAO,CAACM,IAAR,CAAa,eAAb,EAA6BrB,WAA7B;AACH,GAFD,EAEE,CAACA,WAAW,CAAC2B,QAAb,CAFF;AAIA,SACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAE3B,MAAAA,WAAF;AAAeyB,MAAAA,cAAf;AAA+BG,MAAAA,UAAU,EAAEpB,YAAY,CAACY,KAAK,CAACE,KAAN,CAAYE,IAAb,EAAmBJ,KAAK,CAACE,KAAN,CAAYZ,MAA/B,EAAuCU,KAAK,CAACE,KAAN,CAAYX,UAAnD;AAAvD,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKS,KAAK,CAACS,QADX,CADJ;AAKH,CAfM","sourcesContent":["import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}"]},"metadata":{},"sourceType":"module"}