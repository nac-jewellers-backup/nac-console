{"ast":null,"code":"import _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/context/ProductuploadContext.js\";\nimport React from 'react';\nconst productuploadCtxInitial = {\n  productCtx: {\n    product_categoy: \"\",\n    steps: ['Step1', 'Step2', 'Step6'],\n    product_type: \"\",\n    productname: \"\",\n    material: \"\",\n    product_type_shortcode: \"\",\n    category: [],\n    metalColour: \"\",\n    metalpurities: \"\",\n    isExpand: false,\n    selectedgender: \"\",\n    selected_metal_colour: {},\n    gender: {},\n    vendorcode: \"\",\n    productseries: [],\n    size: 0,\n    sizes: [],\n    selected_sizes: [],\n    metal: {\n      value: 1,\n      label: 'Diamond'\n    },\n    materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\n    gemstontypes: \"\",\n    gemstonshapes: \"\",\n    product_code: \"\",\n    gemstonelist: [],\n    diamondlist: [],\n    variants: [],\n    productMetalColor: [],\n    productMetalPurity: [],\n    productDiamondColor: [],\n    productDiamondClarity: [],\n    productVariantSize: [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 // { id:1,size:8 },{ id:2,size:9 },{ id:3,size:10 },{ id:4,size:11 },{ id:5,size:12 },{ id:6,size:13 },{ id:7,size:14 },{ id:8,size:15 },{ id:9,size:16 },{ id:10,size:17 },{ id:11,size:18 },{ id:12,size:19 },{ id:13,size:20 },{ id:14,size:21 },{ id:15,size:22 },{ id:16,size:23 },{ id:17,size:24 },{ id:18,size:25 },\n    ],\n    variant_size: [],\n    gemstonetype: \"\",\n    gemstoneshape: \"\",\n    gemstonesettings: \"\",\n    gemstonesize: \"\",\n    gemstonecount: \"\",\n    gemstoneweight: \"\",\n    stonetype: \"\",\n    diamondclarity: \"\",\n    diamondcolor: \"\",\n    diamondsettings: \"\",\n    diamondshape: \"\",\n    diamondcount: \"\",\n    diamondweight: \"\",\n    metalindex: -1,\n    themes: \"\",\n    prod_styles: \"\",\n    occassions: \"\",\n    collections: \"\",\n    stonecount: \"\",\n    stonecolour: \"\",\n    product_images: {},\n    metalcolour: [],\n    metal_purity: [],\n    metalpurity: [],\n    metal_color: 0,\n    metal_weight: 0,\n    diamond_colour: 0,\n    diamond_clarity: 0,\n    metal_height: 0,\n    metal_width: 0,\n    metal_length: 0,\n    metal_object: 0,\n    diamondtype: 0,\n    metals: [],\n    error_message: {}\n  },\n  masterData: {},\n  setProductCtx: () => null\n};\nexport const ProductContext = React.createContext(productuploadCtxInitial);\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n  if (Object.keys(apiData).length === 0) return {};\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n  return productuploadCtxInitial.productCtx;\n};\n\nexport const ProductProvider = props => {\n  console.info('PROPS', props, props.value.mappertype);\n\n  const _React$useState = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        productCtx = _React$useState2[0],\n        setProductCtx = _React$useState2[1]; // on Mount get Data from storage\n  // on Unmount store data to storage\n\n\n  React.useEffect(() => {\n    console.info('productCtx s', productCtx);\n  }, [productCtx.material]);\n  return React.createElement(ProductContext.Provider, {\n    value: {\n      productCtx,\n      setProductCtx,\n      masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.children);\n};","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/context/ProductuploadContext.js"],"names":["React","productuploadCtxInitial","productCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","isExpand","selectedgender","selected_metal_colour","gender","vendorcode","productseries","size","sizes","selected_sizes","metal","value","label","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","variants","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","masterData","setProductCtx","ProductContext","createContext","ProductConsumer","Consumer","mapDataToCtx","apiData","mapper","mappertype","Object","keys","length","ProductProvider","props","console","info","useState","data","useEffect","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,uBAAuB,GAAG;AAC5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,eAAe,EAAE,EADT;AAERC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV,EAAkB,OAAlB,CAFC;AAGRC,IAAAA,YAAY,EAAC,EAHL;AAIRC,IAAAA,WAAW,EAAC,EAJJ;AAKRC,IAAAA,QAAQ,EAAC,EALD;AAMRC,IAAAA,sBAAsB,EAAE,EANhB;AAORC,IAAAA,QAAQ,EAAC,EAPD;AAQRC,IAAAA,WAAW,EAAC,EARJ;AASRC,IAAAA,aAAa,EAAC,EATN;AAURC,IAAAA,QAAQ,EAAC,KAVD;AAWRC,IAAAA,cAAc,EAAC,EAXP;AAYRC,IAAAA,qBAAqB,EAAC,EAZd;AAaRC,IAAAA,MAAM,EAAE,EAbA;AAcRC,IAAAA,UAAU,EAAE,EAdJ;AAeRC,IAAAA,aAAa,EAAC,EAfN;AAgBRC,IAAAA,IAAI,EAAC,CAhBG;AAiBRC,IAAAA,KAAK,EAAC,EAjBE;AAkBRC,IAAAA,cAAc,EAAC,EAlBP;AAmBRC,IAAAA,KAAK,EAAC;AACFC,MAAAA,KAAK,EAAG,CADN;AAEFC,MAAAA,KAAK,EAAC;AAFJ,KAnBE;AAuBRC,IAAAA,SAAS,EAAC,CACF,SADE,EAEF,MAFE,EAGF,UAHE,EAIF,WAJE,EAKF,QALE,EAMF,UANE,CAvBF;AA+BRC,IAAAA,YAAY,EAAC,EA/BL;AAgCRC,IAAAA,aAAa,EAAC,EAhCN;AAiCRC,IAAAA,YAAY,EAAE,EAjCN;AAkCRC,IAAAA,YAAY,EAAC,EAlCL;AAmCRC,IAAAA,WAAW,EAAC,EAnCJ;AAoCRC,IAAAA,QAAQ,EAAC,EApCD;AAqCRC,IAAAA,iBAAiB,EAAC,EArCV;AAsCRC,IAAAA,kBAAkB,EAAC,EAtCX;AAuCRC,IAAAA,mBAAmB,EAAC,EAvCZ;AAwCRC,IAAAA,qBAAqB,EAAC,EAxCd;AAyCRC,IAAAA,kBAAkB,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,EAAL,EAAQ,EAAR,EAAW,EAAX,EAAc,EAAd,EAAiB,EAAjB,EAAoB,EAApB,EAAuB,EAAvB,EAA0B,EAA1B,EAA6B,EAA7B,EAAgC,EAAhC,EAAmC,EAAnC,EAAsC,EAAtC,EAAyC,EAAzC,EAA4C,EAA5C,EAA+C,EAA/C,EAAkD,EAAlD,CACf;AADe,KAzCX;AA6CRC,IAAAA,YAAY,EAAC,EA7CL;AA8CRC,IAAAA,YAAY,EAAC,EA9CL;AA+CRC,IAAAA,aAAa,EAAC,EA/CN;AAgDRC,IAAAA,gBAAgB,EAAC,EAhDT;AAiDRC,IAAAA,YAAY,EAAC,EAjDL;AAkDRC,IAAAA,aAAa,EAAC,EAlDN;AAmDRC,IAAAA,cAAc,EAAC,EAnDP;AAoDRC,IAAAA,SAAS,EAAC,EApDF;AAsDRC,IAAAA,cAAc,EAAC,EAtDP;AAuDRC,IAAAA,YAAY,EAAC,EAvDL;AAwDRC,IAAAA,eAAe,EAAC,EAxDR;AAyDRC,IAAAA,YAAY,EAAC,EAzDL;AA0DRC,IAAAA,YAAY,EAAC,EA1DL;AA2DRC,IAAAA,aAAa,EAAC,EA3DN;AA4DRC,IAAAA,UAAU,EAAE,CAAC,CA5DL;AA6DRC,IAAAA,MAAM,EAAC,EA7DC;AA8DRC,IAAAA,WAAW,EAAC,EA9DJ;AA+DRC,IAAAA,UAAU,EAAC,EA/DH;AAgERC,IAAAA,WAAW,EAAC,EAhEJ;AAiERC,IAAAA,UAAU,EAAC,EAjEH;AAkERC,IAAAA,WAAW,EAAC,EAlEJ;AAmERC,IAAAA,cAAc,EAAC,EAnEP;AAoERC,IAAAA,WAAW,EAAC,EApEJ;AAqERC,IAAAA,YAAY,EAAC,EArEL;AAsERC,IAAAA,WAAW,EAAC,EAtEJ;AAuERC,IAAAA,WAAW,EAAC,CAvEJ;AAwERC,IAAAA,YAAY,EAAC,CAxEL;AAyERC,IAAAA,cAAc,EAAC,CAzEP;AA0ERC,IAAAA,eAAe,EAAC,CA1ER;AA2ERC,IAAAA,YAAY,EAAC,CA3EL;AA4ERC,IAAAA,WAAW,EAAC,CA5EJ;AA6ERC,IAAAA,YAAY,EAAC,CA7EL;AA8ERC,IAAAA,YAAY,EAAC,CA9EL;AA+ERC,IAAAA,WAAW,EAAC,CA/EJ;AAgFRC,IAAAA,MAAM,EAAC,EAhFC;AAiFRC,IAAAA,aAAa,EAAC;AAjFN,GADgB;AAoF5BC,EAAAA,UAAU,EAAE,EApFgB;AAqF5BC,EAAAA,aAAa,EAAE,MAAM;AArFO,CAAhC;AAwFA,OAAO,MAAMC,cAAc,GAAG1E,KAAK,CAAC2E,aAAN,CAAoB1E,uBAApB,CAAvB;AAEP,OAAO,MAAM2E,eAAe,GAAGF,cAAc,CAACG,QAAvC;;AAEP,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,MAAV,EAAkBC,UAAlB,KAAiC;AAClD,MAAGC,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,KAAgC,CAAnC,EAAsC,OAAO,EAAP;AACtCnF,EAAAA,uBAAuB,CAACC,UAAxB,CAAmC+E,UAAnC,IAAiDD,MAAM,CAACD,OAAD,CAAvD;AAEA,SAAO9E,uBAAuB,CAACC,UAA/B;AACH,CALD;;AAOA,OAAO,MAAMmF,eAAe,GAAGC,KAAK,IAAI;AACpCC,EAAAA,OAAO,CAACC,IAAR,CAAa,OAAb,EAAqBF,KAArB,EAA2BA,KAAK,CAAChE,KAAN,CAAY2D,UAAvC;;AADoC,0BAEGjF,KAAK,CAACyF,QAAN,CAAeX,YAAY,CAACQ,KAAK,CAAChE,KAAN,CAAYoE,IAAb,EAAmBJ,KAAK,CAAChE,KAAN,CAAY0D,MAA/B,EAAsCM,KAAK,CAAChE,KAAN,CAAY2D,UAAlD,CAA3B,CAFH;AAAA;AAAA,QAE5B/E,UAF4B;AAAA,QAEhBuE,aAFgB,wBAGpC;AACA;;;AAEAzE,EAAAA,KAAK,CAAC2F,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,OAAO,CAACC,IAAR,CAAa,cAAb,EAA4BtF,UAA5B;AACH,GAFD,EAEE,CAACA,UAAU,CAACK,QAAZ,CAFF;AAIA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAAEL,MAAAA,UAAF;AAAcuE,MAAAA,aAAd;AAA6BD,MAAAA,UAAU,EAAEM,YAAY,CAACQ,KAAK,CAAChE,KAAN,CAAYoE,IAAb,EAAmBJ,KAAK,CAAChE,KAAN,CAAY0D,MAA/B,EAAuCM,KAAK,CAAChE,KAAN,CAAY2D,UAAnD;AAArD,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKK,KAAK,CAACM,QADX,CADJ;AAKH,CAfM","sourcesContent":["import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n            // { id:1,size:8 },{ id:2,size:9 },{ id:3,size:10 },{ id:4,size:11 },{ id:5,size:12 },{ id:6,size:13 },{ id:7,size:14 },{ id:8,size:15 },{ id:9,size:16 },{ id:10,size:17 },{ id:11,size:18 },{ id:12,size:19 },{ id:13,size:20 },{ id:14,size:21 },{ id:15,size:22 },{ id:16,size:23 },{ id:17,size:24 },{ id:18,size:25 },\n            \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}"]},"metadata":{},"sourceType":"module"}