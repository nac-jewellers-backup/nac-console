{"ast":null,"code":"import _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/Voucherdiscount/components/Results/Results.js\";\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx'; // import moment from 'moment';\n\nimport PropTypes from 'prop-types'; // import PerfectScrollbar from 'react-perfect-scrollbar';\n\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Button, Card, CardActions, CardContent, CardHeader, Divider, IconButton, Typography, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, colors } from '@material-ui/core';\nimport { Label, ReviewStars } from '../../../../components';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const className = props.className,\n        orders = props.orders,\n        rest = _objectWithoutProperties(props, [\"className\", \"orders\"]);\n\n  const classes = useStyles();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOrders = _useState2[0],\n        setSelectedOrders = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const _useState5 = useState(5),\n        _useState6 = _slicedToArray(_useState5, 2),\n        rowsPerPage = _useState6[0],\n        setRowsPerPage = _useState6[1];\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked ? orders.map(order => order.id) : [];\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, selectedIndex), selectedOrders.slice(selectedIndex + 1));\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n  return React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    title: \"Product Type\",\n    action: React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Add New Producttype\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.inner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Table, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Name\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Alias\"), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => React.createElement(TableRow // key={order.id}\n  // selected={selectedOrders.indexOf(order.id) !== -1}\n  , {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, order.name), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, order.alias), React.createElement(TableCell, {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(CreateIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }))))))))), React.createElement(CardActions, {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    component: \"div\",\n    count: orders.length,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))));\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\nResults.defaultProps = {\n  orders: []\n};\nexport default Results;","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/Voucherdiscount/components/Results/Results.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","makeStyles","CreateIcon","DeleteIcon","Button","Card","CardActions","CardContent","CardHeader","Divider","IconButton","Typography","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","colors","Label","ReviewStars","useStyles","theme","root","filterButton","marginRight","spacing","content","padding","inner","minWidth","actions","justifyContent","Results","props","className","orders","rest","classes","selectedOrders","setSelectedOrders","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAll","event","target","checked","map","order","id","handleSelectOne","selectedIndex","indexOf","newSelectedOrders","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","paymentStatusColors","canceled","grey","pending","orange","completed","green","rejected","red","name","alias","propTypes","string","array","isRequired","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,UAPF,EAQEC,UARF,EASEC,KATF,EAUEC,SAVF,EAWEC,SAXF,EAYEC,SAZF,EAaEC,eAbF,EAcEC,QAdF,EAeEC,MAfF,QAgBO,mBAhBP;AAkBA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,wBAAnC;AAEA,MAAMC,SAAS,GAAGpB,UAAU,CAACqB,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE,EAD+B;AAErCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADD,GAFuB;AAKrCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE;AADF,GAL4B;AAQrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAR8B;AAWrCC,EAAAA,OAAO,EAAE;AACPH,IAAAA,OAAO,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADF;AAEPM,IAAAA,cAAc,EAAE;AAFT;AAX4B,CAAL,CAAN,CAA5B;;AAiBA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,QACfC,SADe,GACgBD,KADhB,CACfC,SADe;AAAA,QACJC,MADI,GACgBF,KADhB,CACJE,MADI;AAAA,QACOC,IADP,4BACgBH,KADhB;;AAGvB,QAAMI,OAAO,GAAGjB,SAAS,EAAzB;;AAHuB,oBAKqBzB,QAAQ,CAAC,EAAD,CAL7B;AAAA;AAAA,QAKhB2C,cALgB;AAAA,QAKAC,iBALA;;AAAA,qBAMC5C,QAAQ,CAAC,CAAD,CANT;AAAA;AAAA,QAMhB6C,IANgB;AAAA,QAMVC,OANU;;AAAA,qBAOe9C,QAAQ,CAAC,CAAD,CAPvB;AAAA;AAAA,QAOhB+C,WAPgB;AAAA,QAOHC,cAPG;;AASvB,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,UAAMP,cAAc,GAAGO,KAAK,CAACC,MAAN,CAAaC,OAAb,GACnBZ,MAAM,CAACa,GAAP,CAAWC,KAAK,IAAIA,KAAK,CAACC,EAA1B,CADmB,GAEnB,EAFJ;AAIAX,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAND;;AAQA,QAAMa,eAAe,GAAG,CAACN,KAAD,EAAQK,EAAR,KAAe;AACrC,UAAME,aAAa,GAAGd,cAAc,CAACe,OAAf,CAAuBH,EAAvB,CAAtB;AACA,QAAII,iBAAiB,GAAG,EAAxB;;AAEA,QAAIF,aAAa,KAAK,CAAC,CAAvB,EAA0B;AACxBE,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAAyBjB,cAAzB,EAAyCY,EAAzC,CAApB;AACD,KAFD,MAEO,IAAIE,aAAa,KAAK,CAAtB,EAAyB;AAC9BE,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAAyBjB,cAAc,CAACkB,KAAf,CAAqB,CAArB,CAAzB,CAApB;AACD,KAFM,MAEA,IAAIJ,aAAa,KAAKd,cAAc,CAACmB,MAAf,GAAwB,CAA9C,EAAiD;AACtDH,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAAyBjB,cAAc,CAACkB,KAAf,CAAqB,CAArB,EAAwB,CAAC,CAAzB,CAAzB,CAApB;AACD,KAFM,MAEA,IAAIJ,aAAa,GAAG,CAApB,EAAuB;AAC5BE,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACC,MAAlB,CAClBjB,cAAc,CAACkB,KAAf,CAAqB,CAArB,EAAwBJ,aAAxB,CADkB,EAElBd,cAAc,CAACkB,KAAf,CAAqBJ,aAAa,GAAG,CAArC,CAFkB,CAApB;AAID;;AAEDb,IAAAA,iBAAiB,CAACe,iBAAD,CAAjB;AACD,GAlBD;;AAoBA,QAAMI,gBAAgB,GAAG,CAACb,KAAD,EAAQL,IAAR,KAAiB;AACxCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMmB,uBAAuB,GAAGd,KAAK,IAAI;AACvCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAac,KAAd,CAAd;AACD,GAFD;;AAIA,QAAMC,mBAAmB,GAAG;AAC1BC,IAAAA,QAAQ,EAAE7C,MAAM,CAAC8C,IAAP,CAAY,GAAZ,CADgB;AAE1BC,IAAAA,OAAO,EAAE/C,MAAM,CAACgD,MAAP,CAAc,GAAd,CAFiB;AAG1BC,IAAAA,SAAS,EAAEjD,MAAM,CAACkD,KAAP,CAAa,GAAb,CAHe;AAI1BC,IAAAA,QAAQ,EAAEnD,MAAM,CAACoD,GAAP,CAAW,GAAX;AAJgB,GAA5B;AAOA,SACE,6CACMjC,IADN;AAEE,IAAA,SAAS,EAAEtC,IAAI,CAACuC,OAAO,CAACf,IAAT,EAAeY,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,MAAM,EACJ,oBAAC,MAAD;AACA,MAAA,KAAK,EAAC,SADN;AAEA,MAAA,OAAO,EAAC,WAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAcE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEG,OAAO,CAACX,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACT,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAME,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANF,CADF,CADF,EAWE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,MAAM,CAACqB,KAAP,CAAahB,IAAI,GAAGE,WAApB,EAAiCF,IAAI,GAAGE,WAAP,GAAqBA,WAAtD,EAAmEM,GAAnE,CAAuEC,KAAK,IAC3E,oBAAC,QAAD,CACE;AACA;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaA,KAAK,CAACqB,IAAnB,CAPF,EAQE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BrB,KAAK,CAACsB,KAAjC,CARF,EAUE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAY,kBAAW,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,EAIE,oBAAC,UAAD;AAAY,kBAAW,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAJF,CAVF,CADD,CADH,CAXF,CADF,CAFJ,CAdF,EAuDE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAElC,OAAO,CAACP,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,SAAS,EAAC,KADZ;AAEE,IAAA,KAAK,EAAEK,MAAM,CAACsB,MAFhB;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAIE,IAAA,mBAAmB,EAAEC,uBAJvB;AAKE,IAAA,IAAI,EAAEnB,IALR;AAME,IAAA,WAAW,EAAEE,WANf;AAOE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,CAPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvDF,CAZF,CADF;AAmFD,CAvID;;AAyIAV,OAAO,CAACwC,SAAR,GAAoB;AAClBtC,EAAAA,SAAS,EAAEnC,SAAS,CAAC0E,MADH;AAElBtC,EAAAA,MAAM,EAAEpC,SAAS,CAAC2E,KAAV,CAAgBC;AAFN,CAApB;AAKA3C,OAAO,CAAC4C,YAAR,GAAuB;AACrBzC,EAAAA,MAAM,EAAE;AADa,CAAvB;AAIA,eAAeH,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}