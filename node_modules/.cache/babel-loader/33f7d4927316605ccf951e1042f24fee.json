{"ast":null,"code":"import _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/components/Products/Product.js\";\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Query } from 'react-apollo';\nimport { PRODUCTLIST } from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 200\n}, {\n  id: 'SKU',\n  label: 'SKU',\n  minWidth: 100\n}, {\n  id: 'Edit',\n  label: 'Edit',\n  minWidth: 120,\n  align: 'center',\n  format: value => value.toFixed(2)\n}, {\n  id: 'delete',\n  label: 'delete',\n  minWidth: 120,\n  align: 'center',\n  format: value => value.toFixed(2)\n}];\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage,\n        onChangePage = props.onChangePage;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }) : React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }) : React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\nexport default function AddContact(props) {\n  let history = useHistory();\n  const classes = useStyles2();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(5),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const _React$useState5 = React.useState(0),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        pageCount = _React$useState6[0],\n        setPageCount = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        offsetValue = _React$useState8[0],\n        setOffsetValue = _React$useState8[1]; // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage * rowsPerPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  function ProductEdit(id) {\n    history.push('/');\n  }\n\n  function ProductDelete(id) {}\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    stickyHeader: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, columns.map(column => React.createElement(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, column.label)))), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Query, {\n    query: PRODUCTLIST,\n    onCompleted: data => setPageCount(data.allProductLists.totalCount),\n    variables: {\n      \"Veiw\": rowsPerPage,\n      \"Offset\": offsetValue\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, ({\n    data,\n    loading,\n    error,\n    refetch\n  }) => {\n    debugger;\n\n    if (loading) {// return <Loader />\n    }\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, error); // return false\n    }\n\n    if (data) {\n      return React.createElement(React.Fragment, null, data.allProductLists.nodes.map((row, index) => React.createElement(TableRow, {\n        key: row.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, row.productName), React.createElement(TableCell, {\n        align: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, row.productType), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => ProductEdit(row.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(EditIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }))), React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => ProductDelete(row.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(DeleteIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"data:\", data);\n    }\n  })), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 5,\n    count: pageCount,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage // ActionsComponent={TablePaginationActions}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }))))));\n}","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/components/Products/Product.js"],"names":["React","makeStyles","useTheme","PropTypes","Table","TableBody","TableCell","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","TableHead","EditIcon","DeleteIcon","Query","PRODUCTLIST","useHistory","Button","columns","id","label","minWidth","align","format","value","toFixed","useStyles1","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","number","isRequired","func","createData","name","calories","fat","useStyles2","width","marginTop","table","tableWrapper","overflowX","AddContact","history","useState","setPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","ProductEdit","push","ProductDelete","map","column","data","allProductLists","totalCount","loading","error","refetch","nodes","row","index","productName","productType","e","inputProps","native"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Query } from 'react-apollo';\nimport {PRODUCTLIST} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nconst columns = [\n  { id: 'name', label: 'Name', minWidth: 200 },\n  { id: 'SKU', label: 'SKU', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    history.push('/')\n  }\n  function ProductDelete(id){\n    \n  }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n          <Query\n              query={PRODUCTLIST}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allProductLists.nodes.map((row, index) => (\n                                  <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.productName}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.productType}</TableCell>\n                                  <TableCell align=\"center\">\n                                  <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                  <Button onClick={(e) => ProductDelete(row.id)}>\n                                    <DeleteIcon />\n                                  </Button>\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>data:{data}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}