{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField } from '@material-ui/core';\nimport { Input } from '../../components/Input.js';\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport { PRODUCTEDIT } from '../../graphql/query';\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\"\n    }\n  }\n}));\nexport function ProductAttributes(props) {\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx;\n\n  const _React$useState = React.useState({\n    productCtx: {\n      product_categoy: \"\",\n      steps: ['Step1', 'Step2', 'Step6'],\n      product_type: \"\",\n      productname: \"\",\n      material: \"\",\n      product_type_shortcode: \"\",\n      category: [],\n      metalColour: \"\",\n      metalpurities: \"\",\n      isExpand: false,\n      selectedgender: \"\",\n      selected_metal_colour: {},\n      gender: {},\n      vendorcode: \"\",\n      productseries: [],\n      size: 0,\n      sizes: [],\n      selected_sizes: [],\n      metal: {\n        value: 1,\n        label: 'Diamond'\n      },\n      materials: [\"Diamond\", \"Gold\", \"Gemstone\", \"Solitaire\", \"Silver\", \"Platinum\"],\n      gemstontypes: \"\",\n      gemstonshapes: \"\",\n      product_code: \"\",\n      gemstonelist: [],\n      diamondlist: [],\n      variants: [],\n      gemstonetype: \"\",\n      gemstoneshape: \"\",\n      gemstonesettings: \"\",\n      gemstonesize: \"\",\n      gemstonecount: \"\",\n      gemstoneweight: \"\",\n      stonetype: \"\",\n      diamondclarity: \"\",\n      diamondcolor: \"\",\n      diamondsettings: {\n        \"alias\": \"Plate Prong / Cad pave\",\n        \"id\": \"2d5822d1-e561-11e9-a022-4f27706ed94e\",\n        \"name\": \"Plate Prong / Cad pave\",\n        \"__typename\": \"MasterDiamondsSetting\",\n        \"value\": \"2d5822d1-e561-11e9-a022-4f27706ed94e\",\n        \"label\": \"Plate Prong / Cad pave\"\n      },\n      diamondshape: {\n        \"name\": \"Marquise\",\n        \"id\": \"2d6198b0-e561-11e9-a022-4f27706ed94e\",\n        \"alias\": \"Marquise\",\n        \"__typename\": \"MasterDiamondsShape\",\n        \"value\": \"2d6198b0-e561-11e9-a022-4f27706ed94e\",\n        \"label\": \"Marquise\"\n      },\n      diamondcount: \"2\",\n      diamondweight: \"3\",\n      metalindex: -1,\n      themes: \"\",\n      prod_styles: \"\",\n      occassions: \"\",\n      collections: \"\",\n      stonecount: \"\",\n      stonecolour: \"\",\n      product_images: {},\n      metalcolour: [],\n      metal_purity: [],\n      metalpurity: [],\n      metal_color: 0,\n      metal_weight: 0,\n      diamond_colour: 0,\n      diamond_clarity: 0,\n      metal_height: 0,\n      metal_width: 0,\n      metal_length: 0,\n      metal_object: 0,\n      diamondtype: 0,\n      metals: [],\n      error_message: {}\n    }\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        productname = _React$useState2[0],\n        setProductName = _React$useState2[1];\n\n  console.log(productname, 'render value');\n  const classes = useStyle();\n\n  const keyPress = type => e => {\n    console.log('product', productCtx, e);\n    const re = /^[a-zA-Z\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx(_objectSpread({}, productCtx, {\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  useEffect(() => {\n    const url = \"https://api-alpha.stylori.net/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: {\n          \"productId\": \"WyJwcm9kdWN0X2xpc3RzIiwiU0IwMDEwIl0=\"\n        }\n      })\n    };\n    fetch(url, opts).then(res => res.json()).then(fatchvalue => {\n      console.log(fatchvalue.data.productList.productName, 'fatch data');\n      debugger;\n      setProductName(_objectSpread({}, productname, {\n        productname: fatchvalue.data.productList.productName\n      })); // product_type:fatchvalue.data.productList.productType,\n      // product_categoy: fatchvalue.data.productList.productCategory,\n      // gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n      // diamondlist:fatchvalue. data.productList.productDiamondsByProductSku.nodes,\n      // variants:fatchvalue.data.productList.transSkuListsByProductId.nodes,\n      // product_images:fatchvalue.data.productList.productImagesByProductId.nodes\n    }).catch(console.error);\n    console.log(productCtx, 'context data');\n    debugger;\n  }, []);\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 9,\n    spacing: 2,\n    style: {\n      padding: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"productname\",\n    error: productCtx.error_message.productname,\n    name: \"productname\",\n    label: \"Product Name\",\n    onChange: keyPress('productname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })), React.createElement(DiamondDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }), React.createElement(GemstoneDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }), React.createElement(Variants, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }), React.createElement(Productupload, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    spacing: 2,\n    style: {\n      padding: \"15px\",\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    InputProps: {\n      readOnly: true\n    },\n    id: \"short_description\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"short_description\",\n    label: \"Short Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"seo_text\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"seo_text\",\n    label: \"SEO Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"url\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"url\",\n    label: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"product_category\",\n    InputProps: {\n      readOnly: true\n    },\n    error: productCtx.error_message.productname,\n    name: \"product_category\",\n    label: \"Product Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"product_type\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"product_type\",\n    label: \"Product Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  })));\n}\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  }\n}));\nexport const Productupload = withRouter(props => {\n  const classes = useStyles2();\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, \"error\");\n  return React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  });\n});\nexport default withRouter(ProductAttributes);","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js"],"names":["React","useState","useEffect","makeStyles","Grid","TextField","Input","ProductContext","ProductProvider","withRouter","DiamondDetails","GemstoneDetails","Variants","productCategory","useQuery","CircularProgress","PRODUCTEDIT","useStyle","theme","helperinput","color","ProductAttributes","props","useContext","productCtx","setProductCtx","product_categoy","steps","product_type","productname","material","product_type_shortcode","category","metalColour","metalpurities","isExpand","selectedgender","selected_metal_colour","gender","vendorcode","productseries","size","sizes","selected_sizes","metal","value","label","materials","gemstontypes","gemstonshapes","product_code","gemstonelist","diamondlist","variants","gemstonetype","gemstoneshape","gemstonesettings","gemstonesize","gemstonecount","gemstoneweight","stonetype","diamondclarity","diamondcolor","diamondsettings","diamondshape","diamondcount","diamondweight","metalindex","themes","prod_styles","occassions","collections","stonecount","stonecolour","product_images","metalcolour","metal_purity","metalpurity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","metals","error_message","setProductName","console","log","classes","keyPress","type","e","re","target","test","url","opts","method","headers","body","JSON","stringify","query","variables","fetch","then","res","json","fatchvalue","data","productList","productName","catch","error","padding","backgroundColor","readOnly","useStyles2","progress","margin","Productupload","loading","mapper","mappertype"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField } from '@material-ui/core';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext,ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  \"../Productupload/Productupload.css\";\nimport { PRODUCTEDIT } from '../../graphql/query';\nconst useStyle = makeStyles(theme=>({\n    helperinput: {\n        '& .MuiFormHelperText-root':{\n          color: \"#e53935\",\n        }\n      }\n}))\n\nexport  function ProductAttributes (props){\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [productname,setProductName] = React.useState({\n      productCtx: { \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:{\"alias\":\"Plate Prong / Cad pave\",\"id\":\"2d5822d1-e561-11e9-a022-4f27706ed94e\",\"name\":\"Plate Prong / Cad pave\",\"__typename\":\"MasterDiamondsSetting\",\"value\":\"2d5822d1-e561-11e9-a022-4f27706ed94e\",\"label\":\"Plate Prong / Cad pave\"},\n        diamondshape:{\"name\":\"Marquise\",\"id\":\"2d6198b0-e561-11e9-a022-4f27706ed94e\",\"alias\":\"Marquise\",\"__typename\":\"MasterDiamondsShape\",\"value\":\"2d6198b0-e561-11e9-a022-4f27706ed94e\",\"label\":\"Marquise\"},\n        diamondcount:\"2\",\n        diamondweight:\"3\",\n        metalindex: -1,\n\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    }\n    })\n    console.log(productname,'render value')\n    const classes  = useStyle();\n    const keyPress =type => e => {\n        console.log('product',productCtx,e)\n        const re = /^[a-zA-Z\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n          setProductCtx({ ...productCtx, [type]: e.target.value})\n        }\n        \n     }\n    useEffect(()=>{\n      const url = \"https://api-alpha.stylori.net/graphql\";\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query:PRODUCTEDIT,variables:{\"productId\":\"WyJwcm9kdWN0X2xpc3RzIiwiU0IwMDEwIl0=\"} })\n      };\n        fetch(url, opts)\n        .then(res => res.json())\n        .then(fatchvalue=>{\n          console.log(fatchvalue.data.productList.productName,'fatch data')\n          debugger\n          setProductName({ ...productname,productname:fatchvalue.data.productList.productName})\n           // product_type:fatchvalue.data.productList.productType,\n            // product_categoy: fatchvalue.data.productList.productCategory,\n            // gemstonelist: fatchvalue.data.productList.productGemstonesByProductSku.nodes,\n            // diamondlist:fatchvalue. data.productList.productDiamondsByProductSku.nodes,\n            // variants:fatchvalue.data.productList.transSkuListsByProductId.nodes,\n            // product_images:fatchvalue.data.productList.productImagesByProductId.nodes\n        })\n        .catch(console.error)\n     console.log(productCtx,'context data')\n     debugger\n     },[])\n    return(\n        <Grid container spacing={1} >\n            <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding:\"15px\"}}>\n              <Grid container item md={6}>\n                    <TextField  \n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                      />\n              </Grid>  \n              <DiamondDetails /> \n              <GemstoneDetails/>\n              <Variants />\n              <Productupload/>    \n            </Grid>\n            <Grid item  xs={12} sm={12} md={3} spacing={2} style={{ padding:\"15px\", backgroundColor: \"#FFFFFF\"}}>\n            <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          id=\"short_description\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"short_description\"\n                          label=\"Short Description\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"seo_text\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"seo_text\"\n                          label=\"SEO Text\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"url\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"url\"\n                          label=\"URL\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"product_category\"\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          error = {productCtx.error_message.productname}\n                          name=\"product_category\"\n                          label=\"Product Category\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"product_type\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"product_type\"\n                          label=\"Product Type\"\n                       \n                        />\n                        \n            </Grid>\n        </Grid>\n    )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if(error) return <div>error</div>\n  return (\n      <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n      </ProductProvider>\n  )\n});\nexport default withRouter(ProductAttributes);"]},"metadata":{},"sourceType":"module"}