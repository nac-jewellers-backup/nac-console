{"ast":null,"code":"import _objectSpread from \"/home/manikandan/Downloads/Archive/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField } from '@material-ui/core';\nimport { Input } from '../../components/Input.js';\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport { useParams } from \"react-router-dom\";\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\"\n    }\n  }\n}));\nexport function ProductAttributes(props) {\n  const _React$useContext = React.useContext(ProductContext),\n        productCtx = _React$useContext.productCtx,\n        setProductCtx = _React$useContext.setProductCtx;\n\n  const classes = useStyle();\n\n  let _useParams = useParams(),\n      id = _useParams.id;\n\n  const keyPress = type => e => {\n    console.log('product', productCtx, e);\n    const re = /^[a-zA-Z\\b]+$/;\n\n    if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx(_objectSpread({}, productCtx, {\n        [type]: e.target.value\n      }));\n    }\n  };\n\n  useEffect(() => {\n    const url = \"http://api.dev.pinecrow.com/graphql\";\n    const opts = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        query: PRODUCTEDIT,\n        variables: {\n          $productId: id\n        }\n      })\n    };\n    fetch(url, opts).then(res => res.json()).then(console.log).catch(console.error);\n  });\n  return React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 9,\n    spacing: 2,\n    style: {\n      padding: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"productname\",\n    error: productCtx.error_message.productname,\n    name: \"productname\",\n    label: \"Product Name\",\n    onChange: keyPress('productname'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(DiamondDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(GemstoneDetails, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Variants, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Productupload, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 3,\n    spacing: 2,\n    style: {\n      padding: \"15px\",\n      backgroundColor: \"#FFFFFF\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    InputProps: {\n      readOnly: true\n    },\n    id: \"short_description\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"short_description\",\n    label: \"Short Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"seo_text\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"seo_text\",\n    label: \"SEO Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"url\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"url\",\n    label: \"URL\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"product_category\",\n    InputProps: {\n      readOnly: true\n    },\n    error: productCtx.error_message.productname,\n    name: \"product_category\",\n    label: \"Product Category\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    className: classes.helperinput,\n    variant: \"outlined\",\n    margin: \"dense\",\n    fullWidth: true,\n    defaultValue: productCtx.productname,\n    id: \"product_type\",\n    error: productCtx.error_message.productname,\n    InputProps: {\n      readOnly: true\n    },\n    name: \"product_type\",\n    label: \"Product Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })));\n}\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  }\n}));\nexport const Productupload = withRouter(props => {\n  const classes = useStyles2();\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"error\");\n  return React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  });\n});\nexport default withRouter(ProductAttributes);","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/ProductAttributes.js"],"names":["React","useState","useEffect","makeStyles","Grid","TextField","Input","ProductContext","ProductProvider","withRouter","DiamondDetails","GemstoneDetails","Variants","productCategory","useQuery","CircularProgress","PRODUCTEDIT","useParams","useStyle","theme","helperinput","color","ProductAttributes","props","useContext","productCtx","setProductCtx","classes","id","keyPress","type","e","console","log","re","target","value","test","url","opts","method","headers","body","JSON","stringify","query","variables","$productId","fetch","then","res","json","catch","error","padding","productname","error_message","backgroundColor","readOnly","useStyles2","progress","margin","Productupload","data","loading","mapper","mappertype"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField } from '@material-ui/core';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext,ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport  \"../Productupload/Productupload.css\";\nimport { PRODUCTEDIT } from '../../graphql/query';\nimport {\n  useParams\n} from \"react-router-dom\";\nconst useStyle = makeStyles(theme=>({\n    helperinput: {\n        '& .MuiFormHelperText-root':{\n          color: \"#e53935\",\n        }\n      }\n}))\n\nexport  function ProductAttributes (props){\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes  = useStyle();\n    let { id } = useParams();\n    const keyPress =type => e => {\n        console.log('product',productCtx,e)\n        const re = /^[a-zA-Z\\b]+$/;\n        if (e.target.value === '' || re.test(e.target.value)) {\n          setProductCtx({ ...productCtx, [type]: e.target.value})\n        }\n        \n     }\n    useEffect(()=>{\n      const url = \"http://api.dev.pinecrow.com/graphql\";\n      const opts = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query:PRODUCTEDIT,variables:{$productId:id} })\n      };\n      fetch(url, opts)\n        .then(res => res.json())\n        .then(console.log)\n        .catch(console.error)\n     })\n    return(\n        <Grid container spacing={1} >\n            <Grid item xs={12} sm={12} md={9} spacing={2} style={{ padding:\"15px\"}}>\n              <Grid container item md={6}>\n                    <TextField  \n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                        />\n              </Grid>  \n              <DiamondDetails /> \n              <GemstoneDetails/>\n              <Variants />\n              <Productupload/>    \n            </Grid>\n            <Grid item  xs={12} sm={12} md={3} spacing={2} style={{ padding:\"15px\", backgroundColor: \"#FFFFFF\"}}>\n            <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          id=\"short_description\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"short_description\"\n                          label=\"Short Description\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"seo_text\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"seo_text\"\n                          label=\"SEO Text\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"url\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"url\"\n                          label=\"URL\"\n                       \n                        />\n                        <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"product_category\"\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          error = {productCtx.error_message.productname}\n                          name=\"product_category\"\n                          label=\"Product Category\"\n                       \n                        />\n                       <TextField\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          defaultValue={productCtx.productname}\n                          id=\"product_type\"\n                          error = {productCtx.error_message.productname}\n                          InputProps={{\n                            readOnly: true,\n                          }}\n                          name=\"product_type\"\n                          label=\"Product Type\"\n                       \n                        />\n                        \n            </Grid>\n        </Grid>\n    )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if(error) return <div>error</div>\n  return (\n      <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n      </ProductProvider>\n  )\n});\nexport default (withRouter(ProductAttributes))"]},"metadata":{},"sourceType":"module"}