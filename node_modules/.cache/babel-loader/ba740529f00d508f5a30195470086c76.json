{"ast":null,"code":"var _jsxFileName = \"/home/manikandan/Downloads/Archive/src/screens/ProductEdit/CreateVariant.js\";\nimport React from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { ProductContext } from '../../context';\nexport function CreateVariant(props) {\n  console.log(productCtx, 'createvariants');\n\n  function handleChange(status) {}\n\n  return React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Metal Color\"), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, productCtx.masterData.metalcolour.map((data, index) => productCtx.productMetalColor.some(prod_metal_color => prod_metal_color.productColor == data.name) ? React.createElement(FormControlLabel, {\n    disabled: true,\n    control: React.createElement(Checkbox, {\n      checked: true,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }),\n    label: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }) : React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: true,\n      onChange: handleChange('checkedA'),\n      value: \"checkedA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }),\n    label: data.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))))));\n}\nexport const ProductAttributes = withRouter(props => {\n  const classes = useStyles2();\n\n  const _React$useContext = React.useContext(ProductContext),\n        prodductname = _React$useContext.productCtx.prodductname,\n        setProductCtx = _React$useContext.setProductCtx;\n\n  const _useQuery = useQuery(productCategory.query),\n        data = _useQuery.data,\n        loading = _useQuery.loading,\n        error = _useQuery.error;\n\n  if (loading) return React.createElement(\"div\", {\n    className: \"loaderdiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CircularProgress, {\n    className: classes.progress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }));\n  if (error) return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"error\");\n\n  const _content = React.createElement(ProductProvider, {\n    value: {\n      data,\n      mapper: productCategory.mapper,\n      mappertype: \"masterData\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Component, Object.assign({}, props, {\n    productCtx: productCtx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n\n  return _content;\n});\nexport default CreateVariant;","map":{"version":3,"sources":["/home/manikandan/Downloads/Archive/src/screens/ProductEdit/CreateVariant.js"],"names":["React","Grid","FormGroup","FormControlLabel","Checkbox","ProductContext","CreateVariant","props","console","log","productCtx","handleChange","status","masterData","metalcolour","map","data","index","productMetalColor","some","prod_metal_color","productColor","name","ProductAttributes","withRouter","classes","useStyles2","useContext","prodductname","setProductCtx","useQuery","productCategory","query","loading","error","progress","_content","mapper","mappertype"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { ProductContext } from '../../context';\nexport function CreateVariant(props) {\n\n    console.log(productCtx,'createvariants')\n    function handleChange(status) {\n\n    }\n    return (\n        <Grid container>\n            <Grid item>\n                <Grid container>\n                    <Grid>Metal Color</Grid>\n                    <FormGroup row>\n                        {\n                            productCtx.masterData.metalcolour.map((data,index)=>(\n                                \n                                  productCtx.productMetalColor.some((prod_metal_color)=>prod_metal_color.productColor==data.name)?     \n                                     <FormControlLabel\n                                    disabled\n                                    control={\n                                        <Checkbox checked={true} onChange={handleChange('checkedA')} value=\"checkedA\" />\n                                    }\n                                    label={data.name}\n                                />:     \n                                <FormControlLabel\n                                control={\n                                    <Checkbox checked={true} onChange={handleChange('checkedA')} value=\"checkedA\" />\n                                }\n                                label={data.name}\n                            />\n                           \n                            ))\n                        }\n                    </FormGroup>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n}\nexport const ProductAttributes = withRouter(props => {\n\n    const classes = useStyles2();\n  \n    const { productCtx:{prodductname}, setProductCtx } = React.useContext(ProductContext); \n    const { data, loading, error } = useQuery(productCategory.query);\n  \n    if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if (error) return <div>error</div>\n  \n    const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n      <Component {...props} productCtx={productCtx}/>\n    </ProductProvider>\n    return _content\n});\nexport default CreateVariant;"]},"metadata":{},"sourceType":"module"}